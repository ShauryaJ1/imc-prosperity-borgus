Sandbox logs:
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.06451612903225806)\\n{\"errorMessage\": \"(1.0, 0.06451612903225806)\", \"errorType\": \"Exception\", \"requestId\": \"6155121d-fb7f-4c06-a461-bb43692000b3\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.06451612903225806)\\n{\"errorMessage\": \"(1.0, 0.06451612903225806)\", \"errorType\": \"Exception\", \"requestId\": \"6155121d-fb7f-4c06-a461-bb43692000b3\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 0
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.0967741935483871)\\n{\"errorMessage\": \"(1.0, 0.0967741935483871)\", \"errorType\": \"Exception\", \"requestId\": \"7abc61dd-6d87-41c9-83f9-053abb0a0636\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.0967741935483871)\\n{\"errorMessage\": \"(1.0, 0.0967741935483871)\", \"errorType\": \"Exception\", \"requestId\": \"7abc61dd-6d87-41c9-83f9-053abb0a0636\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 100
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.06451612903225806)\\n{\"errorMessage\": \"(1.0, 0.06451612903225806)\", \"errorType\": \"Exception\", \"requestId\": \"d606afb3-1c7d-4568-9e0a-24f37973d81b\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.06451612903225806)\\n{\"errorMessage\": \"(1.0, 0.06451612903225806)\", \"errorType\": \"Exception\", \"requestId\": \"d606afb3-1c7d-4568-9e0a-24f37973d81b\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 200
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.16129032258064516)\\n{\"errorMessage\": \"(1.0, 0.16129032258064516)\", \"errorType\": \"Exception\", \"requestId\": \"f2097368-56fc-48a1-824e-7f794247b2d8\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.16129032258064516)\\n{\"errorMessage\": \"(1.0, 0.16129032258064516)\", \"errorType\": \"Exception\", \"requestId\": \"f2097368-56fc-48a1-824e-7f794247b2d8\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 300
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.0967741935483871)\\n{\"errorMessage\": \"(1.0, 0.0967741935483871)\", \"errorType\": \"Exception\", \"requestId\": \"e23d7dd1-60b6-46b7-86e7-cbc1d3dbbcdd\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.0967741935483871)\\n{\"errorMessage\": \"(1.0, 0.0967741935483871)\", \"errorType\": \"Exception\", \"requestId\": \"e23d7dd1-60b6-46b7-86e7-cbc1d3dbbcdd\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 400
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.06451612903225806)\\n{\"errorMessage\": \"(1.0, 0.06451612903225806)\", \"errorType\": \"Exception\", \"requestId\": \"d382c025-c16b-46e4-9b7e-cda918a910a0\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.06451612903225806)\\n{\"errorMessage\": \"(1.0, 0.06451612903225806)\", \"errorType\": \"Exception\", \"requestId\": \"d382c025-c16b-46e4-9b7e-cda918a910a0\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 500
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.06451612903225806)\\n{\"errorMessage\": \"(1.0, 0.06451612903225806)\", \"errorType\": \"Exception\", \"requestId\": \"24303486-44eb-40bc-a3c6-4dfa573eda7a\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.06451612903225806)\\n{\"errorMessage\": \"(1.0, 0.06451612903225806)\", \"errorType\": \"Exception\", \"requestId\": \"24303486-44eb-40bc-a3c6-4dfa573eda7a\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 600
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.06451612903225806)\\n{\"errorMessage\": \"(1.0, 0.06451612903225806)\", \"errorType\": \"Exception\", \"requestId\": \"cd7dfd15-d345-4cd6-99df-46a5ec7e0eff\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.06451612903225806)\\n{\"errorMessage\": \"(1.0, 0.06451612903225806)\", \"errorType\": \"Exception\", \"requestId\": \"cd7dfd15-d345-4cd6-99df-46a5ec7e0eff\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 700
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.0967741935483871)\\n{\"errorMessage\": \"(1.0, 0.0967741935483871)\", \"errorType\": \"Exception\", \"requestId\": \"f59aa976-da0e-4e7d-80c1-7b6c228a448e\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.0967741935483871)\\n{\"errorMessage\": \"(1.0, 0.0967741935483871)\", \"errorType\": \"Exception\", \"requestId\": \"f59aa976-da0e-4e7d-80c1-7b6c228a448e\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 800
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.06451612903225806)\\n{\"errorMessage\": \"(1.0, 0.06451612903225806)\", \"errorType\": \"Exception\", \"requestId\": \"0eb137da-4f30-4727-9a7b-b34627a96b44\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.06451612903225806)\\n{\"errorMessage\": \"(1.0, 0.06451612903225806)\", \"errorType\": \"Exception\", \"requestId\": \"0eb137da-4f30-4727-9a7b-b34627a96b44\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 900
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.0967741935483871)\\n{\"errorMessage\": \"(1.0, 0.0967741935483871)\", \"errorType\": \"Exception\", \"requestId\": \"0f86e605-6b84-48a5-b29a-f089fdce2280\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.0967741935483871)\\n{\"errorMessage\": \"(1.0, 0.0967741935483871)\", \"errorType\": \"Exception\", \"requestId\": \"0f86e605-6b84-48a5-b29a-f089fdce2280\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 1000
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.12903225806451613)\\n{\"errorMessage\": \"(1.0, 0.12903225806451613)\", \"errorType\": \"Exception\", \"requestId\": \"2d1dde74-87e5-41ea-b7d5-056b4a4a6512\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.12903225806451613)\\n{\"errorMessage\": \"(1.0, 0.12903225806451613)\", \"errorType\": \"Exception\", \"requestId\": \"2d1dde74-87e5-41ea-b7d5-056b4a4a6512\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 1100
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.03225806451612903)\\n{\"errorMessage\": \"(1.0, 0.03225806451612903)\", \"errorType\": \"Exception\", \"requestId\": \"d45c3cae-ed09-437f-afa0-ca695d668bfa\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.03225806451612903)\\n{\"errorMessage\": \"(1.0, 0.03225806451612903)\", \"errorType\": \"Exception\", \"requestId\": \"d45c3cae-ed09-437f-afa0-ca695d668bfa\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 1200
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.0967741935483871)\\n{\"errorMessage\": \"(1.0, 0.0967741935483871)\", \"errorType\": \"Exception\", \"requestId\": \"e2f23d18-add6-4802-a4a3-1bd76f1d2058\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.0967741935483871)\\n{\"errorMessage\": \"(1.0, 0.0967741935483871)\", \"errorType\": \"Exception\", \"requestId\": \"e2f23d18-add6-4802-a4a3-1bd76f1d2058\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 1300
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.06451612903225806)\\n{\"errorMessage\": \"(1.0, 0.06451612903225806)\", \"errorType\": \"Exception\", \"requestId\": \"22adcbee-03cf-460c-872f-8c3020a5dac5\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.06451612903225806)\\n{\"errorMessage\": \"(1.0, 0.06451612903225806)\", \"errorType\": \"Exception\", \"requestId\": \"22adcbee-03cf-460c-872f-8c3020a5dac5\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 1400
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.03225806451612903)\\n{\"errorMessage\": \"(1.0, 0.03225806451612903)\", \"errorType\": \"Exception\", \"requestId\": \"4ae6ba74-1751-4ffa-905d-1428c65a390f\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.03225806451612903)\\n{\"errorMessage\": \"(1.0, 0.03225806451612903)\", \"errorType\": \"Exception\", \"requestId\": \"4ae6ba74-1751-4ffa-905d-1428c65a390f\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 1500
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.06451612903225806)\\n{\"errorMessage\": \"(1.0, 0.06451612903225806)\", \"errorType\": \"Exception\", \"requestId\": \"4cbd3811-7f0a-4b13-b94f-9e7b35e5dedd\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.06451612903225806)\\n{\"errorMessage\": \"(1.0, 0.06451612903225806)\", \"errorType\": \"Exception\", \"requestId\": \"4cbd3811-7f0a-4b13-b94f-9e7b35e5dedd\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 1600
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.1935483870967742)\\n{\"errorMessage\": \"(1.0, 0.1935483870967742)\", \"errorType\": \"Exception\", \"requestId\": \"82c4055b-3877-4a00-b93c-ed53de281a7b\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.1935483870967742)\\n{\"errorMessage\": \"(1.0, 0.1935483870967742)\", \"errorType\": \"Exception\", \"requestId\": \"82c4055b-3877-4a00-b93c-ed53de281a7b\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 1700
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.06451612903225806)\\n{\"errorMessage\": \"(1.0, 0.06451612903225806)\", \"errorType\": \"Exception\", \"requestId\": \"84d62d35-0688-4ec6-b4f7-460bc324265d\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.06451612903225806)\\n{\"errorMessage\": \"(1.0, 0.06451612903225806)\", \"errorType\": \"Exception\", \"requestId\": \"84d62d35-0688-4ec6-b4f7-460bc324265d\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 1800
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.12903225806451613)\\n{\"errorMessage\": \"(1.0, 0.12903225806451613)\", \"errorType\": \"Exception\", \"requestId\": \"29e1a389-5ecc-46f6-9b55-ce02a43fe28b\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.12903225806451613)\\n{\"errorMessage\": \"(1.0, 0.12903225806451613)\", \"errorType\": \"Exception\", \"requestId\": \"29e1a389-5ecc-46f6-9b55-ce02a43fe28b\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 1900
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.16129032258064516)\\n{\"errorMessage\": \"(1.0, 0.16129032258064516)\", \"errorType\": \"Exception\", \"requestId\": \"88018416-9998-4de3-84a5-58ada2ccead9\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.16129032258064516)\\n{\"errorMessage\": \"(1.0, 0.16129032258064516)\", \"errorType\": \"Exception\", \"requestId\": \"88018416-9998-4de3-84a5-58ada2ccead9\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 2000
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.03225806451612903)\\n{\"errorMessage\": \"(1.0, 0.03225806451612903)\", \"errorType\": \"Exception\", \"requestId\": \"2fcbf279-0d94-46d2-b398-216c6f402938\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.03225806451612903)\\n{\"errorMessage\": \"(1.0, 0.03225806451612903)\", \"errorType\": \"Exception\", \"requestId\": \"2fcbf279-0d94-46d2-b398-216c6f402938\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 2100
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.06451612903225806)\\n{\"errorMessage\": \"(1.0, 0.06451612903225806)\", \"errorType\": \"Exception\", \"requestId\": \"b3fa750f-66c5-4fe9-a3ce-0bb81444076e\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.06451612903225806)\\n{\"errorMessage\": \"(1.0, 0.06451612903225806)\", \"errorType\": \"Exception\", \"requestId\": \"b3fa750f-66c5-4fe9-a3ce-0bb81444076e\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 2200
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.0967741935483871)\\n{\"errorMessage\": \"(1.0, 0.0967741935483871)\", \"errorType\": \"Exception\", \"requestId\": \"ec45da7b-0e57-481c-90df-91da43fef7bb\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.0967741935483871)\\n{\"errorMessage\": \"(1.0, 0.0967741935483871)\", \"errorType\": \"Exception\", \"requestId\": \"ec45da7b-0e57-481c-90df-91da43fef7bb\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 2300
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.06451612903225806)\\n{\"errorMessage\": \"(1.0, 0.06451612903225806)\", \"errorType\": \"Exception\", \"requestId\": \"6061bc05-eeb7-4054-8b1b-eb70a51cef11\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.06451612903225806)\\n{\"errorMessage\": \"(1.0, 0.06451612903225806)\", \"errorType\": \"Exception\", \"requestId\": \"6061bc05-eeb7-4054-8b1b-eb70a51cef11\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 2400
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.03225806451612903)\\n{\"errorMessage\": \"(1.0, 0.03225806451612903)\", \"errorType\": \"Exception\", \"requestId\": \"7730b7ce-b480-4187-86d1-ce635259c6ac\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.03225806451612903)\\n{\"errorMessage\": \"(1.0, 0.03225806451612903)\", \"errorType\": \"Exception\", \"requestId\": \"7730b7ce-b480-4187-86d1-ce635259c6ac\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 2500
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.03225806451612903)\\n{\"errorMessage\": \"(1.0, 0.03225806451612903)\", \"errorType\": \"Exception\", \"requestId\": \"1934e3bc-1da8-42fb-bd50-e1090decab98\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.03225806451612903)\\n{\"errorMessage\": \"(1.0, 0.03225806451612903)\", \"errorType\": \"Exception\", \"requestId\": \"1934e3bc-1da8-42fb-bd50-e1090decab98\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 2600
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.03225806451612903)\\n{\"errorMessage\": \"(1.0, 0.03225806451612903)\", \"errorType\": \"Exception\", \"requestId\": \"0eb4d8ed-edf9-4b3f-9fb7-1a79be9bab5f\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.03225806451612903)\\n{\"errorMessage\": \"(1.0, 0.03225806451612903)\", \"errorType\": \"Exception\", \"requestId\": \"0eb4d8ed-edf9-4b3f-9fb7-1a79be9bab5f\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 2700
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.03225806451612903)\\n{\"errorMessage\": \"(1.0, 0.03225806451612903)\", \"errorType\": \"Exception\", \"requestId\": \"799c37c6-b13a-4d4c-b708-09818036878c\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.03225806451612903)\\n{\"errorMessage\": \"(1.0, 0.03225806451612903)\", \"errorType\": \"Exception\", \"requestId\": \"799c37c6-b13a-4d4c-b708-09818036878c\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 2800
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.06451612903225806)\\n{\"errorMessage\": \"(1.0, 0.06451612903225806)\", \"errorType\": \"Exception\", \"requestId\": \"c4a7d30d-e615-4cbf-ac56-58c574d6ef93\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.06451612903225806)\\n{\"errorMessage\": \"(1.0, 0.06451612903225806)\", \"errorType\": \"Exception\", \"requestId\": \"c4a7d30d-e615-4cbf-ac56-58c574d6ef93\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 2900
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.06451612903225806)\\n{\"errorMessage\": \"(1.0, 0.06451612903225806)\", \"errorType\": \"Exception\", \"requestId\": \"f3ba17f3-eebf-430d-a86d-aa420634e002\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.06451612903225806)\\n{\"errorMessage\": \"(1.0, 0.06451612903225806)\", \"errorType\": \"Exception\", \"requestId\": \"f3ba17f3-eebf-430d-a86d-aa420634e002\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 3000
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.12903225806451613)\\n{\"errorMessage\": \"(1.0, 0.12903225806451613)\", \"errorType\": \"Exception\", \"requestId\": \"4819c679-eb9d-4cb7-bae1-548630e14c48\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.12903225806451613)\\n{\"errorMessage\": \"(1.0, 0.12903225806451613)\", \"errorType\": \"Exception\", \"requestId\": \"4819c679-eb9d-4cb7-bae1-548630e14c48\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 3100
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.06451612903225806)\\n{\"errorMessage\": \"(1.0, 0.06451612903225806)\", \"errorType\": \"Exception\", \"requestId\": \"ea7d77ea-2c8b-4e2c-8704-9fd09d1830ec\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.06451612903225806)\\n{\"errorMessage\": \"(1.0, 0.06451612903225806)\", \"errorType\": \"Exception\", \"requestId\": \"ea7d77ea-2c8b-4e2c-8704-9fd09d1830ec\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 3200
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.06451612903225806)\\n{\"errorMessage\": \"(1.0, 0.06451612903225806)\", \"errorType\": \"Exception\", \"requestId\": \"4b9d76ef-18f8-4265-a933-6fa7672d30b4\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.06451612903225806)\\n{\"errorMessage\": \"(1.0, 0.06451612903225806)\", \"errorType\": \"Exception\", \"requestId\": \"4b9d76ef-18f8-4265-a933-6fa7672d30b4\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 3300
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.06451612903225806)\\n{\"errorMessage\": \"(1.0, 0.06451612903225806)\", \"errorType\": \"Exception\", \"requestId\": \"cf09c996-7107-4143-b4c8-eb27580b52d5\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.06451612903225806)\\n{\"errorMessage\": \"(1.0, 0.06451612903225806)\", \"errorType\": \"Exception\", \"requestId\": \"cf09c996-7107-4143-b4c8-eb27580b52d5\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 3400
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.03225806451612903)\\n{\"errorMessage\": \"(1.0, 0.03225806451612903)\", \"errorType\": \"Exception\", \"requestId\": \"48057d0f-54c0-49a0-ae91-a9e085b79180\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.03225806451612903)\\n{\"errorMessage\": \"(1.0, 0.03225806451612903)\", \"errorType\": \"Exception\", \"requestId\": \"48057d0f-54c0-49a0-ae91-a9e085b79180\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 3500
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.06451612903225806)\\n{\"errorMessage\": \"(1.0, 0.06451612903225806)\", \"errorType\": \"Exception\", \"requestId\": \"b3947b80-5d14-4feb-ba06-9a1a04ed47eb\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.06451612903225806)\\n{\"errorMessage\": \"(1.0, 0.06451612903225806)\", \"errorType\": \"Exception\", \"requestId\": \"b3947b80-5d14-4feb-ba06-9a1a04ed47eb\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 3600
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.06451612903225806)\\n{\"errorMessage\": \"(1.0, 0.06451612903225806)\", \"errorType\": \"Exception\", \"requestId\": \"5be2a96c-246b-4cb2-a487-ce54f8a6044b\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.06451612903225806)\\n{\"errorMessage\": \"(1.0, 0.06451612903225806)\", \"errorType\": \"Exception\", \"requestId\": \"5be2a96c-246b-4cb2-a487-ce54f8a6044b\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 3700
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.12903225806451613)\\n{\"errorMessage\": \"(1.0, 0.12903225806451613)\", \"errorType\": \"Exception\", \"requestId\": \"2ef21b07-4b97-4683-b471-f0ef3e20246f\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.12903225806451613)\\n{\"errorMessage\": \"(1.0, 0.12903225806451613)\", \"errorType\": \"Exception\", \"requestId\": \"2ef21b07-4b97-4683-b471-f0ef3e20246f\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 3800
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.0967741935483871)\\n{\"errorMessage\": \"(1.0, 0.0967741935483871)\", \"errorType\": \"Exception\", \"requestId\": \"d4f52fc6-fa76-45a1-bfa7-a693e690355e\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.0967741935483871)\\n{\"errorMessage\": \"(1.0, 0.0967741935483871)\", \"errorType\": \"Exception\", \"requestId\": \"d4f52fc6-fa76-45a1-bfa7-a693e690355e\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 3900
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.0967741935483871)\\n{\"errorMessage\": \"(1.0, 0.0967741935483871)\", \"errorType\": \"Exception\", \"requestId\": \"18c2345d-9685-4d6d-9380-3fd51f93d250\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.0967741935483871)\\n{\"errorMessage\": \"(1.0, 0.0967741935483871)\", \"errorType\": \"Exception\", \"requestId\": \"18c2345d-9685-4d6d-9380-3fd51f93d250\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 4000
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.06451612903225806)\\n{\"errorMessage\": \"(1.0, 0.06451612903225806)\", \"errorType\": \"Exception\", \"requestId\": \"2bcc0777-2812-4bff-b7a5-88ebbdca3c63\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.06451612903225806)\\n{\"errorMessage\": \"(1.0, 0.06451612903225806)\", \"errorType\": \"Exception\", \"requestId\": \"2bcc0777-2812-4bff-b7a5-88ebbdca3c63\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 4100
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.03225806451612903)\\n{\"errorMessage\": \"(1.0, 0.03225806451612903)\", \"errorType\": \"Exception\", \"requestId\": \"a3c53578-a10d-4741-95f8-44dab04762b8\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.03225806451612903)\\n{\"errorMessage\": \"(1.0, 0.03225806451612903)\", \"errorType\": \"Exception\", \"requestId\": \"a3c53578-a10d-4741-95f8-44dab04762b8\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 4200
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.0967741935483871)\\n{\"errorMessage\": \"(1.0, 0.0967741935483871)\", \"errorType\": \"Exception\", \"requestId\": \"5687ed80-cf52-416c-9fa7-236a98991031\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.0967741935483871)\\n{\"errorMessage\": \"(1.0, 0.0967741935483871)\", \"errorType\": \"Exception\", \"requestId\": \"5687ed80-cf52-416c-9fa7-236a98991031\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 4300
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.03225806451612903)\\n{\"errorMessage\": \"(1.0, 0.03225806451612903)\", \"errorType\": \"Exception\", \"requestId\": \"66eb88ab-2a72-458c-ad22-49252e3b774b\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.03225806451612903)\\n{\"errorMessage\": \"(1.0, 0.03225806451612903)\", \"errorType\": \"Exception\", \"requestId\": \"66eb88ab-2a72-458c-ad22-49252e3b774b\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 4400
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.06451612903225806)\\n{\"errorMessage\": \"(1.0, 0.06451612903225806)\", \"errorType\": \"Exception\", \"requestId\": \"1900a216-2321-4494-b367-39f40d13ff89\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.06451612903225806)\\n{\"errorMessage\": \"(1.0, 0.06451612903225806)\", \"errorType\": \"Exception\", \"requestId\": \"1900a216-2321-4494-b367-39f40d13ff89\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 4500
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.0967741935483871)\\n{\"errorMessage\": \"(1.0, 0.0967741935483871)\", \"errorType\": \"Exception\", \"requestId\": \"aa6e07fa-eb2f-4078-9dc2-7282d420d02f\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.0967741935483871)\\n{\"errorMessage\": \"(1.0, 0.0967741935483871)\", \"errorType\": \"Exception\", \"requestId\": \"aa6e07fa-eb2f-4078-9dc2-7282d420d02f\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 4600
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.06451612903225806)\\n{\"errorMessage\": \"(1.0, 0.06451612903225806)\", \"errorType\": \"Exception\", \"requestId\": \"1e3ab46e-8ed4-41e6-9015-581d351ef699\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.06451612903225806)\\n{\"errorMessage\": \"(1.0, 0.06451612903225806)\", \"errorType\": \"Exception\", \"requestId\": \"1e3ab46e-8ed4-41e6-9015-581d351ef699\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 4700
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.0967741935483871)\\n{\"errorMessage\": \"(1.0, 0.0967741935483871)\", \"errorType\": \"Exception\", \"requestId\": \"15973471-2bce-4941-9363-536a006cc15f\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.0967741935483871)\\n{\"errorMessage\": \"(1.0, 0.0967741935483871)\", \"errorType\": \"Exception\", \"requestId\": \"15973471-2bce-4941-9363-536a006cc15f\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 4800
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.06451612903225806)\\n{\"errorMessage\": \"(1.0, 0.06451612903225806)\", \"errorType\": \"Exception\", \"requestId\": \"74067c72-2d55-4527-852b-c4efb5f93a51\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.06451612903225806)\\n{\"errorMessage\": \"(1.0, 0.06451612903225806)\", \"errorType\": \"Exception\", \"requestId\": \"74067c72-2d55-4527-852b-c4efb5f93a51\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 4900
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.12903225806451613)\\n{\"errorMessage\": \"(1.0, 0.12903225806451613)\", \"errorType\": \"Exception\", \"requestId\": \"0a2efa98-b69c-4f51-91fd-65f3cef33cf2\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.12903225806451613)\\n{\"errorMessage\": \"(1.0, 0.12903225806451613)\", \"errorType\": \"Exception\", \"requestId\": \"0a2efa98-b69c-4f51-91fd-65f3cef33cf2\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 5000
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.06451612903225806)\\n{\"errorMessage\": \"(1.0, 0.06451612903225806)\", \"errorType\": \"Exception\", \"requestId\": \"d0bcb821-8dba-41e5-8919-38bc6c29aff4\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.06451612903225806)\\n{\"errorMessage\": \"(1.0, 0.06451612903225806)\", \"errorType\": \"Exception\", \"requestId\": \"d0bcb821-8dba-41e5-8919-38bc6c29aff4\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 5100
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.03225806451612903)\\n{\"errorMessage\": \"(1.0, 0.03225806451612903)\", \"errorType\": \"Exception\", \"requestId\": \"72e8fb2f-0d57-4978-98e7-927a3052d962\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.03225806451612903)\\n{\"errorMessage\": \"(1.0, 0.03225806451612903)\", \"errorType\": \"Exception\", \"requestId\": \"72e8fb2f-0d57-4978-98e7-927a3052d962\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 5200
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.0967741935483871)\\n{\"errorMessage\": \"(1.0, 0.0967741935483871)\", \"errorType\": \"Exception\", \"requestId\": \"d5338c53-67fe-44f2-b1e6-b7b371a320bb\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.0967741935483871)\\n{\"errorMessage\": \"(1.0, 0.0967741935483871)\", \"errorType\": \"Exception\", \"requestId\": \"d5338c53-67fe-44f2-b1e6-b7b371a320bb\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 5300
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.06451612903225806)\\n{\"errorMessage\": \"(1.0, 0.06451612903225806)\", \"errorType\": \"Exception\", \"requestId\": \"61ea3883-8a07-4b80-8072-e2498a8b62ec\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.06451612903225806)\\n{\"errorMessage\": \"(1.0, 0.06451612903225806)\", \"errorType\": \"Exception\", \"requestId\": \"61ea3883-8a07-4b80-8072-e2498a8b62ec\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 5400
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.0967741935483871)\\n{\"errorMessage\": \"(1.0, 0.0967741935483871)\", \"errorType\": \"Exception\", \"requestId\": \"cfb4688c-f157-46af-bce4-0602d62bc509\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.0967741935483871)\\n{\"errorMessage\": \"(1.0, 0.0967741935483871)\", \"errorType\": \"Exception\", \"requestId\": \"cfb4688c-f157-46af-bce4-0602d62bc509\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 5500
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.0967741935483871)\\n{\"errorMessage\": \"(1.0, 0.0967741935483871)\", \"errorType\": \"Exception\", \"requestId\": \"53dfb95d-705f-4bce-8b2e-0401d1389ec7\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.0967741935483871)\\n{\"errorMessage\": \"(1.0, 0.0967741935483871)\", \"errorType\": \"Exception\", \"requestId\": \"53dfb95d-705f-4bce-8b2e-0401d1389ec7\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 5600
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.06451612903225806)\\n{\"errorMessage\": \"(1.0, 0.06451612903225806)\", \"errorType\": \"Exception\", \"requestId\": \"693d42e8-7137-4973-b34f-86b965a77a1c\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.06451612903225806)\\n{\"errorMessage\": \"(1.0, 0.06451612903225806)\", \"errorType\": \"Exception\", \"requestId\": \"693d42e8-7137-4973-b34f-86b965a77a1c\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 5700
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.03225806451612903)\\n{\"errorMessage\": \"(1.0, 0.03225806451612903)\", \"errorType\": \"Exception\", \"requestId\": \"af90e5af-721c-486a-8104-7f618536893c\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.03225806451612903)\\n{\"errorMessage\": \"(1.0, 0.03225806451612903)\", \"errorType\": \"Exception\", \"requestId\": \"af90e5af-721c-486a-8104-7f618536893c\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 5800
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.0967741935483871)\\n{\"errorMessage\": \"(1.0, 0.0967741935483871)\", \"errorType\": \"Exception\", \"requestId\": \"0821c78d-31d2-40ca-985d-aa97257ed96d\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.0967741935483871)\\n{\"errorMessage\": \"(1.0, 0.0967741935483871)\", \"errorType\": \"Exception\", \"requestId\": \"0821c78d-31d2-40ca-985d-aa97257ed96d\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 5900
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.0967741935483871)\\n{\"errorMessage\": \"(1.0, 0.0967741935483871)\", \"errorType\": \"Exception\", \"requestId\": \"e94f5aeb-ba4d-4744-b338-6e654f90ceb4\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.0967741935483871)\\n{\"errorMessage\": \"(1.0, 0.0967741935483871)\", \"errorType\": \"Exception\", \"requestId\": \"e94f5aeb-ba4d-4744-b338-6e654f90ceb4\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 6000
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.12903225806451613)\\n{\"errorMessage\": \"(1.0, 0.12903225806451613)\", \"errorType\": \"Exception\", \"requestId\": \"c4b63a7d-8604-4266-ae74-47a079c6a95d\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.12903225806451613)\\n{\"errorMessage\": \"(1.0, 0.12903225806451613)\", \"errorType\": \"Exception\", \"requestId\": \"c4b63a7d-8604-4266-ae74-47a079c6a95d\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 6100
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.06451612903225806)\\n{\"errorMessage\": \"(1.0, 0.06451612903225806)\", \"errorType\": \"Exception\", \"requestId\": \"edde3485-7f90-4476-9830-b47429923d7f\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.06451612903225806)\\n{\"errorMessage\": \"(1.0, 0.06451612903225806)\", \"errorType\": \"Exception\", \"requestId\": \"edde3485-7f90-4476-9830-b47429923d7f\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 6200
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.06451612903225806)\\n{\"errorMessage\": \"(1.0, 0.06451612903225806)\", \"errorType\": \"Exception\", \"requestId\": \"460e596c-6266-4fb6-af4d-037cd073c870\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.06451612903225806)\\n{\"errorMessage\": \"(1.0, 0.06451612903225806)\", \"errorType\": \"Exception\", \"requestId\": \"460e596c-6266-4fb6-af4d-037cd073c870\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 6300
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.0967741935483871)\\n{\"errorMessage\": \"(1.0, 0.0967741935483871)\", \"errorType\": \"Exception\", \"requestId\": \"179f52ee-f251-4271-97fc-9c9fa397d0a4\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.0967741935483871)\\n{\"errorMessage\": \"(1.0, 0.0967741935483871)\", \"errorType\": \"Exception\", \"requestId\": \"179f52ee-f251-4271-97fc-9c9fa397d0a4\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 6400
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.06451612903225806)\\n{\"errorMessage\": \"(1.0, 0.06451612903225806)\", \"errorType\": \"Exception\", \"requestId\": \"a63d8242-96d2-45de-bc0b-eb3612c47d50\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.06451612903225806)\\n{\"errorMessage\": \"(1.0, 0.06451612903225806)\", \"errorType\": \"Exception\", \"requestId\": \"a63d8242-96d2-45de-bc0b-eb3612c47d50\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 6500
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.03225806451612903)\\n{\"errorMessage\": \"(1.0, 0.03225806451612903)\", \"errorType\": \"Exception\", \"requestId\": \"6743b788-617a-462b-8e14-37031603d010\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.03225806451612903)\\n{\"errorMessage\": \"(1.0, 0.03225806451612903)\", \"errorType\": \"Exception\", \"requestId\": \"6743b788-617a-462b-8e14-37031603d010\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 6600
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.03225806451612903)\\n{\"errorMessage\": \"(1.0, 0.03225806451612903)\", \"errorType\": \"Exception\", \"requestId\": \"3dde60e1-606f-4ea1-84a9-60e25ee52584\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.03225806451612903)\\n{\"errorMessage\": \"(1.0, 0.03225806451612903)\", \"errorType\": \"Exception\", \"requestId\": \"3dde60e1-606f-4ea1-84a9-60e25ee52584\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 6700
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.03225806451612903)\\n{\"errorMessage\": \"(1.0, 0.03225806451612903)\", \"errorType\": \"Exception\", \"requestId\": \"86da57e6-8d45-49e5-abba-5708b13beec7\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.03225806451612903)\\n{\"errorMessage\": \"(1.0, 0.03225806451612903)\", \"errorType\": \"Exception\", \"requestId\": \"86da57e6-8d45-49e5-abba-5708b13beec7\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 6800
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.03225806451612903)\\n{\"errorMessage\": \"(1.0, 0.03225806451612903)\", \"errorType\": \"Exception\", \"requestId\": \"a6388afe-9175-465a-bb18-5062ca72aadb\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.03225806451612903)\\n{\"errorMessage\": \"(1.0, 0.03225806451612903)\", \"errorType\": \"Exception\", \"requestId\": \"a6388afe-9175-465a-bb18-5062ca72aadb\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 6900
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.06451612903225806)\\n{\"errorMessage\": \"(1.0, 0.06451612903225806)\", \"errorType\": \"Exception\", \"requestId\": \"a7d4c02d-42ad-4751-a829-2375c6133053\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.06451612903225806)\\n{\"errorMessage\": \"(1.0, 0.06451612903225806)\", \"errorType\": \"Exception\", \"requestId\": \"a7d4c02d-42ad-4751-a829-2375c6133053\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 7000
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.12903225806451613)\\n{\"errorMessage\": \"(1.0, 0.12903225806451613)\", \"errorType\": \"Exception\", \"requestId\": \"08a49dc9-60e1-489f-9e34-963dbae5f601\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.12903225806451613)\\n{\"errorMessage\": \"(1.0, 0.12903225806451613)\", \"errorType\": \"Exception\", \"requestId\": \"08a49dc9-60e1-489f-9e34-963dbae5f601\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 7100
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.12903225806451613)\\n{\"errorMessage\": \"(1.0, 0.12903225806451613)\", \"errorType\": \"Exception\", \"requestId\": \"050457c0-07b5-4c87-bb2a-7810373e00be\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.12903225806451613)\\n{\"errorMessage\": \"(1.0, 0.12903225806451613)\", \"errorType\": \"Exception\", \"requestId\": \"050457c0-07b5-4c87-bb2a-7810373e00be\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 7200
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.06451612903225806)\\n{\"errorMessage\": \"(1.0, 0.06451612903225806)\", \"errorType\": \"Exception\", \"requestId\": \"e1c5cd0c-c4ef-4940-a334-00b41bb74548\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.06451612903225806)\\n{\"errorMessage\": \"(1.0, 0.06451612903225806)\", \"errorType\": \"Exception\", \"requestId\": \"e1c5cd0c-c4ef-4940-a334-00b41bb74548\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 7300
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.12903225806451613)\\n{\"errorMessage\": \"(1.0, 0.12903225806451613)\", \"errorType\": \"Exception\", \"requestId\": \"14a4e85f-6d35-4444-b8b6-37f354b08e2e\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.12903225806451613)\\n{\"errorMessage\": \"(1.0, 0.12903225806451613)\", \"errorType\": \"Exception\", \"requestId\": \"14a4e85f-6d35-4444-b8b6-37f354b08e2e\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 7400
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.06451612903225806)\\n{\"errorMessage\": \"(1.0, 0.06451612903225806)\", \"errorType\": \"Exception\", \"requestId\": \"73ca55be-6e7c-4684-8662-40a2778396d5\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.06451612903225806)\\n{\"errorMessage\": \"(1.0, 0.06451612903225806)\", \"errorType\": \"Exception\", \"requestId\": \"73ca55be-6e7c-4684-8662-40a2778396d5\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 7500
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.16129032258064516)\\n{\"errorMessage\": \"(1.0, 0.16129032258064516)\", \"errorType\": \"Exception\", \"requestId\": \"22856314-5e3e-4e3b-bb67-1ba801d297f6\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.16129032258064516)\\n{\"errorMessage\": \"(1.0, 0.16129032258064516)\", \"errorType\": \"Exception\", \"requestId\": \"22856314-5e3e-4e3b-bb67-1ba801d297f6\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 7600
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.0967741935483871)\\n{\"errorMessage\": \"(1.0, 0.0967741935483871)\", \"errorType\": \"Exception\", \"requestId\": \"5f0bc7f4-486b-4208-8a88-bc7f6f1c79a7\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.0967741935483871)\\n{\"errorMessage\": \"(1.0, 0.0967741935483871)\", \"errorType\": \"Exception\", \"requestId\": \"5f0bc7f4-486b-4208-8a88-bc7f6f1c79a7\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 7700
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.03225806451612903)\\n{\"errorMessage\": \"(1.0, 0.03225806451612903)\", \"errorType\": \"Exception\", \"requestId\": \"5705b787-1b0d-4c40-94b5-44a39321aadb\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.03225806451612903)\\n{\"errorMessage\": \"(1.0, 0.03225806451612903)\", \"errorType\": \"Exception\", \"requestId\": \"5705b787-1b0d-4c40-94b5-44a39321aadb\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 7800
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.0967741935483871)\\n{\"errorMessage\": \"(1.0, 0.0967741935483871)\", \"errorType\": \"Exception\", \"requestId\": \"1c2aaa79-f411-4b20-9f14-b893206d71a2\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.0967741935483871)\\n{\"errorMessage\": \"(1.0, 0.0967741935483871)\", \"errorType\": \"Exception\", \"requestId\": \"1c2aaa79-f411-4b20-9f14-b893206d71a2\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 7900
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.03225806451612903)\\n{\"errorMessage\": \"(1.0, 0.03225806451612903)\", \"errorType\": \"Exception\", \"requestId\": \"3187f6f7-74f4-43c1-bfe4-005e70d7d9bc\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.03225806451612903)\\n{\"errorMessage\": \"(1.0, 0.03225806451612903)\", \"errorType\": \"Exception\", \"requestId\": \"3187f6f7-74f4-43c1-bfe4-005e70d7d9bc\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 8000
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.12903225806451613)\\n{\"errorMessage\": \"(1.0, 0.12903225806451613)\", \"errorType\": \"Exception\", \"requestId\": \"44e30c5a-a4fb-49a6-b12e-04a3f6b02b24\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.12903225806451613)\\n{\"errorMessage\": \"(1.0, 0.12903225806451613)\", \"errorType\": \"Exception\", \"requestId\": \"44e30c5a-a4fb-49a6-b12e-04a3f6b02b24\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 8100
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.03225806451612903)\\n{\"errorMessage\": \"(1.0, 0.03225806451612903)\", \"errorType\": \"Exception\", \"requestId\": \"a127b26c-6963-43f1-a758-ac6690c6b987\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.03225806451612903)\\n{\"errorMessage\": \"(1.0, 0.03225806451612903)\", \"errorType\": \"Exception\", \"requestId\": \"a127b26c-6963-43f1-a758-ac6690c6b987\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 8200
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.12903225806451613)\\n{\"errorMessage\": \"(1.0, 0.12903225806451613)\", \"errorType\": \"Exception\", \"requestId\": \"bb7bf6b9-c4b5-4b4e-b5ae-b60d1484e1ec\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.12903225806451613)\\n{\"errorMessage\": \"(1.0, 0.12903225806451613)\", \"errorType\": \"Exception\", \"requestId\": \"bb7bf6b9-c4b5-4b4e-b5ae-b60d1484e1ec\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 8300
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.03225806451612903)\\n{\"errorMessage\": \"(1.0, 0.03225806451612903)\", \"errorType\": \"Exception\", \"requestId\": \"bb602baf-12dd-4a45-9e98-8893f70e87a5\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.03225806451612903)\\n{\"errorMessage\": \"(1.0, 0.03225806451612903)\", \"errorType\": \"Exception\", \"requestId\": \"bb602baf-12dd-4a45-9e98-8893f70e87a5\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 8400
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.03225806451612903)\\n{\"errorMessage\": \"(1.0, 0.03225806451612903)\", \"errorType\": \"Exception\", \"requestId\": \"ed914a1f-c54b-4ace-b3cf-78223fbcc1d3\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.03225806451612903)\\n{\"errorMessage\": \"(1.0, 0.03225806451612903)\", \"errorType\": \"Exception\", \"requestId\": \"ed914a1f-c54b-4ace-b3cf-78223fbcc1d3\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 8500
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.03225806451612903)\\n{\"errorMessage\": \"(1.0, 0.03225806451612903)\", \"errorType\": \"Exception\", \"requestId\": \"ee03619b-559a-4dbc-9551-a9a19ef77a83\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.03225806451612903)\\n{\"errorMessage\": \"(1.0, 0.03225806451612903)\", \"errorType\": \"Exception\", \"requestId\": \"ee03619b-559a-4dbc-9551-a9a19ef77a83\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 8600
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.12903225806451613)\\n{\"errorMessage\": \"(1.0, 0.12903225806451613)\", \"errorType\": \"Exception\", \"requestId\": \"1eb8b5f6-6fbe-4cb7-8129-a4e1173a90a2\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.12903225806451613)\\n{\"errorMessage\": \"(1.0, 0.12903225806451613)\", \"errorType\": \"Exception\", \"requestId\": \"1eb8b5f6-6fbe-4cb7-8129-a4e1173a90a2\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 8700
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.12903225806451613)\\n{\"errorMessage\": \"(1.0, 0.12903225806451613)\", \"errorType\": \"Exception\", \"requestId\": \"5733e55a-791a-4709-8245-28b11bf958b7\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.12903225806451613)\\n{\"errorMessage\": \"(1.0, 0.12903225806451613)\", \"errorType\": \"Exception\", \"requestId\": \"5733e55a-791a-4709-8245-28b11bf958b7\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 8800
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.1935483870967742)\\n{\"errorMessage\": \"(1.0, 0.1935483870967742)\", \"errorType\": \"Exception\", \"requestId\": \"b725e13a-2313-47b8-8e8d-c457ceb398f9\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.1935483870967742)\\n{\"errorMessage\": \"(1.0, 0.1935483870967742)\", \"errorType\": \"Exception\", \"requestId\": \"b725e13a-2313-47b8-8e8d-c457ceb398f9\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 8900
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.16129032258064516)\\n{\"errorMessage\": \"(1.0, 0.16129032258064516)\", \"errorType\": \"Exception\", \"requestId\": \"53b3a28d-aaf3-4e75-9bdb-90f91ce6c303\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.16129032258064516)\\n{\"errorMessage\": \"(1.0, 0.16129032258064516)\", \"errorType\": \"Exception\", \"requestId\": \"53b3a28d-aaf3-4e75-9bdb-90f91ce6c303\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 9000
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.0967741935483871)\\n{\"errorMessage\": \"(1.0, 0.0967741935483871)\", \"errorType\": \"Exception\", \"requestId\": \"27548e3a-84f1-45de-acb3-bf99b00d35b9\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.0967741935483871)\\n{\"errorMessage\": \"(1.0, 0.0967741935483871)\", \"errorType\": \"Exception\", \"requestId\": \"27548e3a-84f1-45de-acb3-bf99b00d35b9\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 9100
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.0967741935483871)\\n{\"errorMessage\": \"(1.0, 0.0967741935483871)\", \"errorType\": \"Exception\", \"requestId\": \"2ef7b526-741d-4dd4-92a2-27dfa6bd0eec\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.0967741935483871)\\n{\"errorMessage\": \"(1.0, 0.0967741935483871)\", \"errorType\": \"Exception\", \"requestId\": \"2ef7b526-741d-4dd4-92a2-27dfa6bd0eec\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 9200
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.06451612903225806)\\n{\"errorMessage\": \"(1.0, 0.06451612903225806)\", \"errorType\": \"Exception\", \"requestId\": \"ced881f6-2123-4cd8-ba6b-81a7c4b5a85d\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.06451612903225806)\\n{\"errorMessage\": \"(1.0, 0.06451612903225806)\", \"errorType\": \"Exception\", \"requestId\": \"ced881f6-2123-4cd8-ba6b-81a7c4b5a85d\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 9300
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.12903225806451613)\\n{\"errorMessage\": \"(1.0, 0.12903225806451613)\", \"errorType\": \"Exception\", \"requestId\": \"ae749861-ac74-4175-b11e-a14ba85af655\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.12903225806451613)\\n{\"errorMessage\": \"(1.0, 0.12903225806451613)\", \"errorType\": \"Exception\", \"requestId\": \"ae749861-ac74-4175-b11e-a14ba85af655\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 9400
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.06451612903225806)\\n{\"errorMessage\": \"(1.0, 0.06451612903225806)\", \"errorType\": \"Exception\", \"requestId\": \"09110a49-64e3-4d23-ab78-2721ac426402\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.06451612903225806)\\n{\"errorMessage\": \"(1.0, 0.06451612903225806)\", \"errorType\": \"Exception\", \"requestId\": \"09110a49-64e3-4d23-ab78-2721ac426402\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 9500
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.03225806451612903)\\n{\"errorMessage\": \"(1.0, 0.03225806451612903)\", \"errorType\": \"Exception\", \"requestId\": \"bc37e907-b772-4e56-92b1-72ffb2c54d2b\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.03225806451612903)\\n{\"errorMessage\": \"(1.0, 0.03225806451612903)\", \"errorType\": \"Exception\", \"requestId\": \"bc37e907-b772-4e56-92b1-72ffb2c54d2b\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 9600
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.12903225806451613)\\n{\"errorMessage\": \"(1.0, 0.12903225806451613)\", \"errorType\": \"Exception\", \"requestId\": \"5b2b1118-bd7c-4b4f-91b4-c6be3a265103\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.12903225806451613)\\n{\"errorMessage\": \"(1.0, 0.12903225806451613)\", \"errorType\": \"Exception\", \"requestId\": \"5b2b1118-bd7c-4b4f-91b4-c6be3a265103\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 9700
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.03225806451612903)\\n{\"errorMessage\": \"(1.0, 0.03225806451612903)\", \"errorType\": \"Exception\", \"requestId\": \"6cb8d82d-ede3-446f-87dd-86866a23194a\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.03225806451612903)\\n{\"errorMessage\": \"(1.0, 0.03225806451612903)\", \"errorType\": \"Exception\", \"requestId\": \"6cb8d82d-ede3-446f-87dd-86866a23194a\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 9800
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.06451612903225806)\\n{\"errorMessage\": \"(1.0, 0.06451612903225806)\", \"errorType\": \"Exception\", \"requestId\": \"139a5fc5-6215-4b2e-b814-0d84d0b8692a\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.06451612903225806)\\n{\"errorMessage\": \"(1.0, 0.06451612903225806)\", \"errorType\": \"Exception\", \"requestId\": \"139a5fc5-6215-4b2e-b814-0d84d0b8692a\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 9900
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.06451612903225806)\\n{\"errorMessage\": \"(1.0, 0.06451612903225806)\", \"errorType\": \"Exception\", \"requestId\": \"05e89ea6-207f-47aa-ab35-9408d7e4a937\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.06451612903225806)\\n{\"errorMessage\": \"(1.0, 0.06451612903225806)\", \"errorType\": \"Exception\", \"requestId\": \"05e89ea6-207f-47aa-ab35-9408d7e4a937\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 10000
}
{
  "sandboxLog": "Lambda errors have reached maximum value for submission 20794ca4-4469-4cb4-bf20-b57c02ab312e",
  "lambdaLog": null,
  "timestamp": 133296
}



Activities log:
day;timestamp;product;bid_price_1;bid_volume_1;bid_price_2;bid_volume_2;bid_price_3;bid_volume_3;ask_price_1;ask_volume_1;ask_price_2;ask_volume_2;ask_price_3;ask_volume_3;mid_price;profit_and_loss




Trade History:
null