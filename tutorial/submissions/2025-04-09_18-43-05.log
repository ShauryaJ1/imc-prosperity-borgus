Sandbox logs:
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.039603960396039604)\\n{\"errorMessage\": \"(1.0, 0.039603960396039604)\", \"errorType\": \"Exception\", \"requestId\": \"03401211-9097-4119-94ac-fe3e2dcd1256\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.039603960396039604)\\n{\"errorMessage\": \"(1.0, 0.039603960396039604)\", \"errorType\": \"Exception\", \"requestId\": \"03401211-9097-4119-94ac-fe3e2dcd1256\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 0
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.039603960396039604)\\n{\"errorMessage\": \"(1.0, 0.039603960396039604)\", \"errorType\": \"Exception\", \"requestId\": \"9ef5663a-8993-44a3-a975-1b3826133534\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.039603960396039604)\\n{\"errorMessage\": \"(1.0, 0.039603960396039604)\", \"errorType\": \"Exception\", \"requestId\": \"9ef5663a-8993-44a3-a975-1b3826133534\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 100
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.04950495049504951)\\n{\"errorMessage\": \"(1.0, 0.04950495049504951)\", \"errorType\": \"Exception\", \"requestId\": \"da7fbf00-46de-49cc-819e-9f67be00f6ef\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.04950495049504951)\\n{\"errorMessage\": \"(1.0, 0.04950495049504951)\", \"errorType\": \"Exception\", \"requestId\": \"da7fbf00-46de-49cc-819e-9f67be00f6ef\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 200
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.04950495049504951)\\n{\"errorMessage\": \"(1.0, 0.04950495049504951)\", \"errorType\": \"Exception\", \"requestId\": \"2e7a19d0-9a89-4174-9d38-69834d38e9f2\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.04950495049504951)\\n{\"errorMessage\": \"(1.0, 0.04950495049504951)\", \"errorType\": \"Exception\", \"requestId\": \"2e7a19d0-9a89-4174-9d38-69834d38e9f2\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 300
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.0297029702970297)\\n{\"errorMessage\": \"(1.0, 0.0297029702970297)\", \"errorType\": \"Exception\", \"requestId\": \"d1f56687-6f04-467b-888e-6193b2c3416d\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.0297029702970297)\\n{\"errorMessage\": \"(1.0, 0.0297029702970297)\", \"errorType\": \"Exception\", \"requestId\": \"d1f56687-6f04-467b-888e-6193b2c3416d\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 400
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.04950495049504951)\\n{\"errorMessage\": \"(1.0, 0.04950495049504951)\", \"errorType\": \"Exception\", \"requestId\": \"c1388245-49e2-46ea-8139-883cdb1489b2\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.04950495049504951)\\n{\"errorMessage\": \"(1.0, 0.04950495049504951)\", \"errorType\": \"Exception\", \"requestId\": \"c1388245-49e2-46ea-8139-883cdb1489b2\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 500
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.039603960396039604)\\n{\"errorMessage\": \"(1.0, 0.039603960396039604)\", \"errorType\": \"Exception\", \"requestId\": \"aa672a99-1c05-47ed-a3d3-133a59dc0e98\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.039603960396039604)\\n{\"errorMessage\": \"(1.0, 0.039603960396039604)\", \"errorType\": \"Exception\", \"requestId\": \"aa672a99-1c05-47ed-a3d3-133a59dc0e98\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 600
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.039603960396039604)\\n{\"errorMessage\": \"(1.0, 0.039603960396039604)\", \"errorType\": \"Exception\", \"requestId\": \"af8fdd46-adae-46f9-b239-3ff60a1a356f\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.039603960396039604)\\n{\"errorMessage\": \"(1.0, 0.039603960396039604)\", \"errorType\": \"Exception\", \"requestId\": \"af8fdd46-adae-46f9-b239-3ff60a1a356f\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 700
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.07920792079207921)\\n{\"errorMessage\": \"(1.0, 0.07920792079207921)\", \"errorType\": \"Exception\", \"requestId\": \"da5db746-fa94-4de0-9826-759fae39a83f\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.07920792079207921)\\n{\"errorMessage\": \"(1.0, 0.07920792079207921)\", \"errorType\": \"Exception\", \"requestId\": \"da5db746-fa94-4de0-9826-759fae39a83f\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 800
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.0594059405940594)\\n{\"errorMessage\": \"(1.0, 0.0594059405940594)\", \"errorType\": \"Exception\", \"requestId\": \"fb87fdf2-fb99-4378-b128-6cb4d3f57374\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.0594059405940594)\\n{\"errorMessage\": \"(1.0, 0.0594059405940594)\", \"errorType\": \"Exception\", \"requestId\": \"fb87fdf2-fb99-4378-b128-6cb4d3f57374\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 900
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.039603960396039604)\\n{\"errorMessage\": \"(1.0, 0.039603960396039604)\", \"errorType\": \"Exception\", \"requestId\": \"2bd1bb4f-df22-4974-9d17-a839f3ee7111\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.039603960396039604)\\n{\"errorMessage\": \"(1.0, 0.039603960396039604)\", \"errorType\": \"Exception\", \"requestId\": \"2bd1bb4f-df22-4974-9d17-a839f3ee7111\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 1000
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.039603960396039604)\\n{\"errorMessage\": \"(1.0, 0.039603960396039604)\", \"errorType\": \"Exception\", \"requestId\": \"5c9e9937-d4a4-4a9c-b594-bdc3d709b5b2\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.039603960396039604)\\n{\"errorMessage\": \"(1.0, 0.039603960396039604)\", \"errorType\": \"Exception\", \"requestId\": \"5c9e9937-d4a4-4a9c-b594-bdc3d709b5b2\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 1100
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.06930693069306931)\\n{\"errorMessage\": \"(1.0, 0.06930693069306931)\", \"errorType\": \"Exception\", \"requestId\": \"643d647f-eba8-494c-bb89-00d3102074fc\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.06930693069306931)\\n{\"errorMessage\": \"(1.0, 0.06930693069306931)\", \"errorType\": \"Exception\", \"requestId\": \"643d647f-eba8-494c-bb89-00d3102074fc\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 1200
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.07920792079207921)\\n{\"errorMessage\": \"(1.0, 0.07920792079207921)\", \"errorType\": \"Exception\", \"requestId\": \"584c78f7-17a0-4729-8fa5-00f302a7fb7c\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.07920792079207921)\\n{\"errorMessage\": \"(1.0, 0.07920792079207921)\", \"errorType\": \"Exception\", \"requestId\": \"584c78f7-17a0-4729-8fa5-00f302a7fb7c\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 1300
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.0297029702970297)\\n{\"errorMessage\": \"(1.0, 0.0297029702970297)\", \"errorType\": \"Exception\", \"requestId\": \"9cab196f-bd04-4166-bf72-aed6e2f05f4e\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.0297029702970297)\\n{\"errorMessage\": \"(1.0, 0.0297029702970297)\", \"errorType\": \"Exception\", \"requestId\": \"9cab196f-bd04-4166-bf72-aed6e2f05f4e\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 1400
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.04950495049504951)\\n{\"errorMessage\": \"(1.0, 0.04950495049504951)\", \"errorType\": \"Exception\", \"requestId\": \"219abdf6-e3b6-4ae6-aeaf-460816fbdf5f\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.04950495049504951)\\n{\"errorMessage\": \"(1.0, 0.04950495049504951)\", \"errorType\": \"Exception\", \"requestId\": \"219abdf6-e3b6-4ae6-aeaf-460816fbdf5f\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 1500
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.0297029702970297)\\n{\"errorMessage\": \"(1.0, 0.0297029702970297)\", \"errorType\": \"Exception\", \"requestId\": \"32eb4dd9-a15f-429f-ba2d-69ff32055a7c\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.0297029702970297)\\n{\"errorMessage\": \"(1.0, 0.0297029702970297)\", \"errorType\": \"Exception\", \"requestId\": \"32eb4dd9-a15f-429f-ba2d-69ff32055a7c\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 1600
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.0594059405940594)\\n{\"errorMessage\": \"(1.0, 0.0594059405940594)\", \"errorType\": \"Exception\", \"requestId\": \"79619d9a-a0f7-4f19-bb04-5f120caa4a60\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.0594059405940594)\\n{\"errorMessage\": \"(1.0, 0.0594059405940594)\", \"errorType\": \"Exception\", \"requestId\": \"79619d9a-a0f7-4f19-bb04-5f120caa4a60\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 1700
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.0891089108910891)\\n{\"errorMessage\": \"(1.0, 0.0891089108910891)\", \"errorType\": \"Exception\", \"requestId\": \"c3250180-db2a-40fa-b0af-ba52daa0c855\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.0891089108910891)\\n{\"errorMessage\": \"(1.0, 0.0891089108910891)\", \"errorType\": \"Exception\", \"requestId\": \"c3250180-db2a-40fa-b0af-ba52daa0c855\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 1800
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.039603960396039604)\\n{\"errorMessage\": \"(1.0, 0.039603960396039604)\", \"errorType\": \"Exception\", \"requestId\": \"3dc3fc19-c8fb-4d31-8726-eef720fbb2ad\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.039603960396039604)\\n{\"errorMessage\": \"(1.0, 0.039603960396039604)\", \"errorType\": \"Exception\", \"requestId\": \"3dc3fc19-c8fb-4d31-8726-eef720fbb2ad\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 1900
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.0297029702970297)\\n{\"errorMessage\": \"(1.0, 0.0297029702970297)\", \"errorType\": \"Exception\", \"requestId\": \"01295ced-2405-4d70-84be-90bcbd0c3a84\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.0297029702970297)\\n{\"errorMessage\": \"(1.0, 0.0297029702970297)\", \"errorType\": \"Exception\", \"requestId\": \"01295ced-2405-4d70-84be-90bcbd0c3a84\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 2000
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.04950495049504951)\\n{\"errorMessage\": \"(1.0, 0.04950495049504951)\", \"errorType\": \"Exception\", \"requestId\": \"13628f4e-e1d5-46e6-b1e5-64cd78f64125\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.04950495049504951)\\n{\"errorMessage\": \"(1.0, 0.04950495049504951)\", \"errorType\": \"Exception\", \"requestId\": \"13628f4e-e1d5-46e6-b1e5-64cd78f64125\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 2100
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.0594059405940594)\\n{\"errorMessage\": \"(1.0, 0.0594059405940594)\", \"errorType\": \"Exception\", \"requestId\": \"a574a704-eadb-4fde-a60a-30b4a905dc20\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.0594059405940594)\\n{\"errorMessage\": \"(1.0, 0.0594059405940594)\", \"errorType\": \"Exception\", \"requestId\": \"a574a704-eadb-4fde-a60a-30b4a905dc20\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 2200
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.0297029702970297)\\n{\"errorMessage\": \"(1.0, 0.0297029702970297)\", \"errorType\": \"Exception\", \"requestId\": \"dbd73359-9316-43e6-8157-0bb893f31446\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.0297029702970297)\\n{\"errorMessage\": \"(1.0, 0.0297029702970297)\", \"errorType\": \"Exception\", \"requestId\": \"dbd73359-9316-43e6-8157-0bb893f31446\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 2300
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.0594059405940594)\\n{\"errorMessage\": \"(1.0, 0.0594059405940594)\", \"errorType\": \"Exception\", \"requestId\": \"93df18b1-9ede-451b-ac9c-3e721bf7b023\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.0594059405940594)\\n{\"errorMessage\": \"(1.0, 0.0594059405940594)\", \"errorType\": \"Exception\", \"requestId\": \"93df18b1-9ede-451b-ac9c-3e721bf7b023\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 2400
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.039603960396039604)\\n{\"errorMessage\": \"(1.0, 0.039603960396039604)\", \"errorType\": \"Exception\", \"requestId\": \"cf8cdee9-0efb-43e9-9f6f-13359bf2ff58\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.039603960396039604)\\n{\"errorMessage\": \"(1.0, 0.039603960396039604)\", \"errorType\": \"Exception\", \"requestId\": \"cf8cdee9-0efb-43e9-9f6f-13359bf2ff58\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 2500
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.04950495049504951)\\n{\"errorMessage\": \"(1.0, 0.04950495049504951)\", \"errorType\": \"Exception\", \"requestId\": \"d0798ad3-5bc6-41c3-b7cf-de7338168dbc\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.04950495049504951)\\n{\"errorMessage\": \"(1.0, 0.04950495049504951)\", \"errorType\": \"Exception\", \"requestId\": \"d0798ad3-5bc6-41c3-b7cf-de7338168dbc\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 2600
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.04950495049504951)\\n{\"errorMessage\": \"(1.0, 0.04950495049504951)\", \"errorType\": \"Exception\", \"requestId\": \"e49426de-bea6-479f-990b-e5cb8bfaa22b\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.04950495049504951)\\n{\"errorMessage\": \"(1.0, 0.04950495049504951)\", \"errorType\": \"Exception\", \"requestId\": \"e49426de-bea6-479f-990b-e5cb8bfaa22b\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 2700
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.06930693069306931)\\n{\"errorMessage\": \"(1.0, 0.06930693069306931)\", \"errorType\": \"Exception\", \"requestId\": \"676f8ca6-0a6a-4021-9752-d5161dda415e\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.06930693069306931)\\n{\"errorMessage\": \"(1.0, 0.06930693069306931)\", \"errorType\": \"Exception\", \"requestId\": \"676f8ca6-0a6a-4021-9752-d5161dda415e\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 2800
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.039603960396039604)\\n{\"errorMessage\": \"(1.0, 0.039603960396039604)\", \"errorType\": \"Exception\", \"requestId\": \"9fa0e7d3-833f-489b-9864-d21343e420c1\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.039603960396039604)\\n{\"errorMessage\": \"(1.0, 0.039603960396039604)\", \"errorType\": \"Exception\", \"requestId\": \"9fa0e7d3-833f-489b-9864-d21343e420c1\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 2900
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.0297029702970297)\\n{\"errorMessage\": \"(1.0, 0.0297029702970297)\", \"errorType\": \"Exception\", \"requestId\": \"6c86a82f-71e4-4eed-ac22-9367e951c7e8\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.0297029702970297)\\n{\"errorMessage\": \"(1.0, 0.0297029702970297)\", \"errorType\": \"Exception\", \"requestId\": \"6c86a82f-71e4-4eed-ac22-9367e951c7e8\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 3000
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.0594059405940594)\\n{\"errorMessage\": \"(1.0, 0.0594059405940594)\", \"errorType\": \"Exception\", \"requestId\": \"44494a0f-2c1c-435d-a60f-1921775404c5\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.0594059405940594)\\n{\"errorMessage\": \"(1.0, 0.0594059405940594)\", \"errorType\": \"Exception\", \"requestId\": \"44494a0f-2c1c-435d-a60f-1921775404c5\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 3100
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.019801980198019802)\\n{\"errorMessage\": \"(1.0, 0.019801980198019802)\", \"errorType\": \"Exception\", \"requestId\": \"6901588a-86bb-4b0f-8f03-0fbb1fd5b388\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.019801980198019802)\\n{\"errorMessage\": \"(1.0, 0.019801980198019802)\", \"errorType\": \"Exception\", \"requestId\": \"6901588a-86bb-4b0f-8f03-0fbb1fd5b388\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 3200
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.07920792079207921)\\n{\"errorMessage\": \"(1.0, 0.07920792079207921)\", \"errorType\": \"Exception\", \"requestId\": \"a2930645-f436-4bf2-8b83-3fa151743bbd\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.07920792079207921)\\n{\"errorMessage\": \"(1.0, 0.07920792079207921)\", \"errorType\": \"Exception\", \"requestId\": \"a2930645-f436-4bf2-8b83-3fa151743bbd\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 3300
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.07920792079207921)\\n{\"errorMessage\": \"(1.0, 0.07920792079207921)\", \"errorType\": \"Exception\", \"requestId\": \"2a1cb71e-14e7-4808-937f-8088294f6dd9\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.07920792079207921)\\n{\"errorMessage\": \"(1.0, 0.07920792079207921)\", \"errorType\": \"Exception\", \"requestId\": \"2a1cb71e-14e7-4808-937f-8088294f6dd9\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 3400
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.06930693069306931)\\n{\"errorMessage\": \"(1.0, 0.06930693069306931)\", \"errorType\": \"Exception\", \"requestId\": \"e29df8bb-a0e2-42af-b035-36ac82e46a16\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.06930693069306931)\\n{\"errorMessage\": \"(1.0, 0.06930693069306931)\", \"errorType\": \"Exception\", \"requestId\": \"e29df8bb-a0e2-42af-b035-36ac82e46a16\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 3500
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.039603960396039604)\\n{\"errorMessage\": \"(1.0, 0.039603960396039604)\", \"errorType\": \"Exception\", \"requestId\": \"672f344c-4b74-4331-aa68-21b6a4d6c307\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.039603960396039604)\\n{\"errorMessage\": \"(1.0, 0.039603960396039604)\", \"errorType\": \"Exception\", \"requestId\": \"672f344c-4b74-4331-aa68-21b6a4d6c307\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 3600
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.039603960396039604)\\n{\"errorMessage\": \"(1.0, 0.039603960396039604)\", \"errorType\": \"Exception\", \"requestId\": \"717919a0-c9aa-4f2a-ae3a-7cb569c6905f\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.039603960396039604)\\n{\"errorMessage\": \"(1.0, 0.039603960396039604)\", \"errorType\": \"Exception\", \"requestId\": \"717919a0-c9aa-4f2a-ae3a-7cb569c6905f\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 3700
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.039603960396039604)\\n{\"errorMessage\": \"(1.0, 0.039603960396039604)\", \"errorType\": \"Exception\", \"requestId\": \"8d3e5384-da33-4222-a829-421f11f17603\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.039603960396039604)\\n{\"errorMessage\": \"(1.0, 0.039603960396039604)\", \"errorType\": \"Exception\", \"requestId\": \"8d3e5384-da33-4222-a829-421f11f17603\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 3800
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.0594059405940594)\\n{\"errorMessage\": \"(1.0, 0.0594059405940594)\", \"errorType\": \"Exception\", \"requestId\": \"7b62dcff-959e-4002-8038-82c980ba0ae1\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.0594059405940594)\\n{\"errorMessage\": \"(1.0, 0.0594059405940594)\", \"errorType\": \"Exception\", \"requestId\": \"7b62dcff-959e-4002-8038-82c980ba0ae1\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 3900
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.0594059405940594)\\n{\"errorMessage\": \"(1.0, 0.0594059405940594)\", \"errorType\": \"Exception\", \"requestId\": \"a4665c92-ebef-41f1-8d99-817e5a55a398\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.0594059405940594)\\n{\"errorMessage\": \"(1.0, 0.0594059405940594)\", \"errorType\": \"Exception\", \"requestId\": \"a4665c92-ebef-41f1-8d99-817e5a55a398\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 4000
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.06930693069306931)\\n{\"errorMessage\": \"(1.0, 0.06930693069306931)\", \"errorType\": \"Exception\", \"requestId\": \"af26555c-6631-46a3-ad0f-f8a6bb629e16\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.06930693069306931)\\n{\"errorMessage\": \"(1.0, 0.06930693069306931)\", \"errorType\": \"Exception\", \"requestId\": \"af26555c-6631-46a3-ad0f-f8a6bb629e16\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 4100
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.06930693069306931)\\n{\"errorMessage\": \"(1.0, 0.06930693069306931)\", \"errorType\": \"Exception\", \"requestId\": \"80ad756f-c01c-42a6-a9dd-4273ddd0ca07\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.06930693069306931)\\n{\"errorMessage\": \"(1.0, 0.06930693069306931)\", \"errorType\": \"Exception\", \"requestId\": \"80ad756f-c01c-42a6-a9dd-4273ddd0ca07\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 4200
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.0297029702970297)\\n{\"errorMessage\": \"(1.0, 0.0297029702970297)\", \"errorType\": \"Exception\", \"requestId\": \"1802b0ba-9f68-4ecc-a20f-a8f0f6b1d410\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.0297029702970297)\\n{\"errorMessage\": \"(1.0, 0.0297029702970297)\", \"errorType\": \"Exception\", \"requestId\": \"1802b0ba-9f68-4ecc-a20f-a8f0f6b1d410\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 4300
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.039603960396039604)\\n{\"errorMessage\": \"(1.0, 0.039603960396039604)\", \"errorType\": \"Exception\", \"requestId\": \"71e6f6e8-3c8c-4b96-8c14-de703b6f57d0\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.039603960396039604)\\n{\"errorMessage\": \"(1.0, 0.039603960396039604)\", \"errorType\": \"Exception\", \"requestId\": \"71e6f6e8-3c8c-4b96-8c14-de703b6f57d0\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 4400
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.039603960396039604)\\n{\"errorMessage\": \"(1.0, 0.039603960396039604)\", \"errorType\": \"Exception\", \"requestId\": \"dc38e583-b157-459f-a754-9694478ea04c\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.039603960396039604)\\n{\"errorMessage\": \"(1.0, 0.039603960396039604)\", \"errorType\": \"Exception\", \"requestId\": \"dc38e583-b157-459f-a754-9694478ea04c\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 4500
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.039603960396039604)\\n{\"errorMessage\": \"(1.0, 0.039603960396039604)\", \"errorType\": \"Exception\", \"requestId\": \"cc27961c-4b91-49f4-a604-a1349c3ea143\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.039603960396039604)\\n{\"errorMessage\": \"(1.0, 0.039603960396039604)\", \"errorType\": \"Exception\", \"requestId\": \"cc27961c-4b91-49f4-a604-a1349c3ea143\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 4600
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.04950495049504951)\\n{\"errorMessage\": \"(1.0, 0.04950495049504951)\", \"errorType\": \"Exception\", \"requestId\": \"cd6fe0e6-67cf-493d-82e4-0160c15442b6\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.04950495049504951)\\n{\"errorMessage\": \"(1.0, 0.04950495049504951)\", \"errorType\": \"Exception\", \"requestId\": \"cd6fe0e6-67cf-493d-82e4-0160c15442b6\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 4700
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.0594059405940594)\\n{\"errorMessage\": \"(1.0, 0.0594059405940594)\", \"errorType\": \"Exception\", \"requestId\": \"1cbada04-0d89-44ef-a2e1-ccccc53d778a\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.0594059405940594)\\n{\"errorMessage\": \"(1.0, 0.0594059405940594)\", \"errorType\": \"Exception\", \"requestId\": \"1cbada04-0d89-44ef-a2e1-ccccc53d778a\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 4800
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.04950495049504951)\\n{\"errorMessage\": \"(1.0, 0.04950495049504951)\", \"errorType\": \"Exception\", \"requestId\": \"8075a075-c12b-4337-9919-44649131bf81\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.04950495049504951)\\n{\"errorMessage\": \"(1.0, 0.04950495049504951)\", \"errorType\": \"Exception\", \"requestId\": \"8075a075-c12b-4337-9919-44649131bf81\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 4900
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.0594059405940594)\\n{\"errorMessage\": \"(1.0, 0.0594059405940594)\", \"errorType\": \"Exception\", \"requestId\": \"bb857e1c-7fea-42a8-aad3-a9ae183b7b32\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.0594059405940594)\\n{\"errorMessage\": \"(1.0, 0.0594059405940594)\", \"errorType\": \"Exception\", \"requestId\": \"bb857e1c-7fea-42a8-aad3-a9ae183b7b32\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 5000
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.04950495049504951)\\n{\"errorMessage\": \"(1.0, 0.04950495049504951)\", \"errorType\": \"Exception\", \"requestId\": \"d53f13af-b8be-4de8-ae42-a3ab96952c10\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.04950495049504951)\\n{\"errorMessage\": \"(1.0, 0.04950495049504951)\", \"errorType\": \"Exception\", \"requestId\": \"d53f13af-b8be-4de8-ae42-a3ab96952c10\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 5100
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.06930693069306931)\\n{\"errorMessage\": \"(1.0, 0.06930693069306931)\", \"errorType\": \"Exception\", \"requestId\": \"0f04cdc0-2bb5-411c-a252-179853a15171\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.06930693069306931)\\n{\"errorMessage\": \"(1.0, 0.06930693069306931)\", \"errorType\": \"Exception\", \"requestId\": \"0f04cdc0-2bb5-411c-a252-179853a15171\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 5200
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.07920792079207921)\\n{\"errorMessage\": \"(1.0, 0.07920792079207921)\", \"errorType\": \"Exception\", \"requestId\": \"4bc67433-5953-40f0-85b6-761da49af0d2\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.07920792079207921)\\n{\"errorMessage\": \"(1.0, 0.07920792079207921)\", \"errorType\": \"Exception\", \"requestId\": \"4bc67433-5953-40f0-85b6-761da49af0d2\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 5300
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.039603960396039604)\\n{\"errorMessage\": \"(1.0, 0.039603960396039604)\", \"errorType\": \"Exception\", \"requestId\": \"40627f22-c715-482f-9203-96b28c72f4a1\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.039603960396039604)\\n{\"errorMessage\": \"(1.0, 0.039603960396039604)\", \"errorType\": \"Exception\", \"requestId\": \"40627f22-c715-482f-9203-96b28c72f4a1\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 5400
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.039603960396039604)\\n{\"errorMessage\": \"(1.0, 0.039603960396039604)\", \"errorType\": \"Exception\", \"requestId\": \"5887e395-4289-4cff-8cb2-7ac058624b9d\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.039603960396039604)\\n{\"errorMessage\": \"(1.0, 0.039603960396039604)\", \"errorType\": \"Exception\", \"requestId\": \"5887e395-4289-4cff-8cb2-7ac058624b9d\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 5500
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.0594059405940594)\\n{\"errorMessage\": \"(1.0, 0.0594059405940594)\", \"errorType\": \"Exception\", \"requestId\": \"23a28ff7-9f44-4323-8106-078393840474\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.0594059405940594)\\n{\"errorMessage\": \"(1.0, 0.0594059405940594)\", \"errorType\": \"Exception\", \"requestId\": \"23a28ff7-9f44-4323-8106-078393840474\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 5600
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.0297029702970297)\\n{\"errorMessage\": \"(1.0, 0.0297029702970297)\", \"errorType\": \"Exception\", \"requestId\": \"e5b8b87d-60a3-4644-a487-4e24a4e0224b\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.0297029702970297)\\n{\"errorMessage\": \"(1.0, 0.0297029702970297)\", \"errorType\": \"Exception\", \"requestId\": \"e5b8b87d-60a3-4644-a487-4e24a4e0224b\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 5700
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.039603960396039604)\\n{\"errorMessage\": \"(1.0, 0.039603960396039604)\", \"errorType\": \"Exception\", \"requestId\": \"b9997316-19c1-4b27-8aa5-ed4dbf3b7121\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.039603960396039604)\\n{\"errorMessage\": \"(1.0, 0.039603960396039604)\", \"errorType\": \"Exception\", \"requestId\": \"b9997316-19c1-4b27-8aa5-ed4dbf3b7121\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 5800
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.06930693069306931)\\n{\"errorMessage\": \"(1.0, 0.06930693069306931)\", \"errorType\": \"Exception\", \"requestId\": \"79820ec5-cce3-4021-8385-c20db5d71d62\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.06930693069306931)\\n{\"errorMessage\": \"(1.0, 0.06930693069306931)\", \"errorType\": \"Exception\", \"requestId\": \"79820ec5-cce3-4021-8385-c20db5d71d62\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 5900
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.0594059405940594)\\n{\"errorMessage\": \"(1.0, 0.0594059405940594)\", \"errorType\": \"Exception\", \"requestId\": \"ff1d9a45-1ca3-4811-af3e-34e1c5c56a1d\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.0594059405940594)\\n{\"errorMessage\": \"(1.0, 0.0594059405940594)\", \"errorType\": \"Exception\", \"requestId\": \"ff1d9a45-1ca3-4811-af3e-34e1c5c56a1d\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 6000
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.04950495049504951)\\n{\"errorMessage\": \"(1.0, 0.04950495049504951)\", \"errorType\": \"Exception\", \"requestId\": \"2767e0a1-efa6-470d-80b5-bdaa2c7419d2\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.04950495049504951)\\n{\"errorMessage\": \"(1.0, 0.04950495049504951)\", \"errorType\": \"Exception\", \"requestId\": \"2767e0a1-efa6-470d-80b5-bdaa2c7419d2\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 6100
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.06930693069306931)\\n{\"errorMessage\": \"(1.0, 0.06930693069306931)\", \"errorType\": \"Exception\", \"requestId\": \"ab65d88b-2e27-457e-8464-1acaecfcbbc9\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.06930693069306931)\\n{\"errorMessage\": \"(1.0, 0.06930693069306931)\", \"errorType\": \"Exception\", \"requestId\": \"ab65d88b-2e27-457e-8464-1acaecfcbbc9\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 6200
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.039603960396039604)\\n{\"errorMessage\": \"(1.0, 0.039603960396039604)\", \"errorType\": \"Exception\", \"requestId\": \"ce29427e-5e0a-4672-986a-3022dbb1cf66\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.039603960396039604)\\n{\"errorMessage\": \"(1.0, 0.039603960396039604)\", \"errorType\": \"Exception\", \"requestId\": \"ce29427e-5e0a-4672-986a-3022dbb1cf66\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 6300
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.0297029702970297)\\n{\"errorMessage\": \"(1.0, 0.0297029702970297)\", \"errorType\": \"Exception\", \"requestId\": \"9351dbad-b1e1-4532-bf27-fedd490dfe48\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.0297029702970297)\\n{\"errorMessage\": \"(1.0, 0.0297029702970297)\", \"errorType\": \"Exception\", \"requestId\": \"9351dbad-b1e1-4532-bf27-fedd490dfe48\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 6400
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.04950495049504951)\\n{\"errorMessage\": \"(1.0, 0.04950495049504951)\", \"errorType\": \"Exception\", \"requestId\": \"6eee2abd-4df7-41a3-a64d-a31b762faf13\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.04950495049504951)\\n{\"errorMessage\": \"(1.0, 0.04950495049504951)\", \"errorType\": \"Exception\", \"requestId\": \"6eee2abd-4df7-41a3-a64d-a31b762faf13\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 6500
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.09900990099009901)\\n{\"errorMessage\": \"(1.0, 0.09900990099009901)\", \"errorType\": \"Exception\", \"requestId\": \"10516a7b-e4d8-42e8-a48c-323de0881573\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.09900990099009901)\\n{\"errorMessage\": \"(1.0, 0.09900990099009901)\", \"errorType\": \"Exception\", \"requestId\": \"10516a7b-e4d8-42e8-a48c-323de0881573\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 6600
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.06930693069306931)\\n{\"errorMessage\": \"(1.0, 0.06930693069306931)\", \"errorType\": \"Exception\", \"requestId\": \"a6a6d6e9-fc67-41bd-b297-1ef1a509a917\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.06930693069306931)\\n{\"errorMessage\": \"(1.0, 0.06930693069306931)\", \"errorType\": \"Exception\", \"requestId\": \"a6a6d6e9-fc67-41bd-b297-1ef1a509a917\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 6700
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.039603960396039604)\\n{\"errorMessage\": \"(1.0, 0.039603960396039604)\", \"errorType\": \"Exception\", \"requestId\": \"af2935f3-f34e-4bc0-a0d9-9235c35c0980\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.039603960396039604)\\n{\"errorMessage\": \"(1.0, 0.039603960396039604)\", \"errorType\": \"Exception\", \"requestId\": \"af2935f3-f34e-4bc0-a0d9-9235c35c0980\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 6800
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.0297029702970297)\\n{\"errorMessage\": \"(1.0, 0.0297029702970297)\", \"errorType\": \"Exception\", \"requestId\": \"57143984-996e-4b19-bee6-01da0439a827\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.0297029702970297)\\n{\"errorMessage\": \"(1.0, 0.0297029702970297)\", \"errorType\": \"Exception\", \"requestId\": \"57143984-996e-4b19-bee6-01da0439a827\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 6900
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.039603960396039604)\\n{\"errorMessage\": \"(1.0, 0.039603960396039604)\", \"errorType\": \"Exception\", \"requestId\": \"bd1483fd-8e2f-45c9-91b0-7f262a0fb5a9\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.039603960396039604)\\n{\"errorMessage\": \"(1.0, 0.039603960396039604)\", \"errorType\": \"Exception\", \"requestId\": \"bd1483fd-8e2f-45c9-91b0-7f262a0fb5a9\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 7000
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.039603960396039604)\\n{\"errorMessage\": \"(1.0, 0.039603960396039604)\", \"errorType\": \"Exception\", \"requestId\": \"64e358ab-117f-46a4-8de3-98087015e812\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.039603960396039604)\\n{\"errorMessage\": \"(1.0, 0.039603960396039604)\", \"errorType\": \"Exception\", \"requestId\": \"64e358ab-117f-46a4-8de3-98087015e812\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 7100
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.039603960396039604)\\n{\"errorMessage\": \"(1.0, 0.039603960396039604)\", \"errorType\": \"Exception\", \"requestId\": \"17fec0e3-8035-44d0-b00d-61883b4eb985\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.039603960396039604)\\n{\"errorMessage\": \"(1.0, 0.039603960396039604)\", \"errorType\": \"Exception\", \"requestId\": \"17fec0e3-8035-44d0-b00d-61883b4eb985\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 7200
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.04950495049504951)\\n{\"errorMessage\": \"(1.0, 0.04950495049504951)\", \"errorType\": \"Exception\", \"requestId\": \"87b5f514-ef8e-4b17-aa88-8bfc32053d50\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.04950495049504951)\\n{\"errorMessage\": \"(1.0, 0.04950495049504951)\", \"errorType\": \"Exception\", \"requestId\": \"87b5f514-ef8e-4b17-aa88-8bfc32053d50\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 7300
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.039603960396039604)\\n{\"errorMessage\": \"(1.0, 0.039603960396039604)\", \"errorType\": \"Exception\", \"requestId\": \"19295340-d5f7-436a-bc49-a228e9a256b7\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.039603960396039604)\\n{\"errorMessage\": \"(1.0, 0.039603960396039604)\", \"errorType\": \"Exception\", \"requestId\": \"19295340-d5f7-436a-bc49-a228e9a256b7\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 7400
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.039603960396039604)\\n{\"errorMessage\": \"(1.0, 0.039603960396039604)\", \"errorType\": \"Exception\", \"requestId\": \"6406be6a-e17c-4d0c-b04f-3742177b00c2\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.039603960396039604)\\n{\"errorMessage\": \"(1.0, 0.039603960396039604)\", \"errorType\": \"Exception\", \"requestId\": \"6406be6a-e17c-4d0c-b04f-3742177b00c2\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 7500
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.04950495049504951)\\n{\"errorMessage\": \"(1.0, 0.04950495049504951)\", \"errorType\": \"Exception\", \"requestId\": \"ab612d94-e613-4bed-8f81-54c4b417f0dd\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.04950495049504951)\\n{\"errorMessage\": \"(1.0, 0.04950495049504951)\", \"errorType\": \"Exception\", \"requestId\": \"ab612d94-e613-4bed-8f81-54c4b417f0dd\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 7600
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.0594059405940594)\\n{\"errorMessage\": \"(1.0, 0.0594059405940594)\", \"errorType\": \"Exception\", \"requestId\": \"0a75ccbf-8673-4813-b901-2d59c692ac72\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.0594059405940594)\\n{\"errorMessage\": \"(1.0, 0.0594059405940594)\", \"errorType\": \"Exception\", \"requestId\": \"0a75ccbf-8673-4813-b901-2d59c692ac72\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 7700
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.019801980198019802)\\n{\"errorMessage\": \"(1.0, 0.019801980198019802)\", \"errorType\": \"Exception\", \"requestId\": \"ca6bb6b4-2a86-4009-adf7-881dff7939ec\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.019801980198019802)\\n{\"errorMessage\": \"(1.0, 0.019801980198019802)\", \"errorType\": \"Exception\", \"requestId\": \"ca6bb6b4-2a86-4009-adf7-881dff7939ec\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 7800
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.04950495049504951)\\n{\"errorMessage\": \"(1.0, 0.04950495049504951)\", \"errorType\": \"Exception\", \"requestId\": \"64b6e5c0-fb35-438d-90fc-d98a789b3c1e\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.04950495049504951)\\n{\"errorMessage\": \"(1.0, 0.04950495049504951)\", \"errorType\": \"Exception\", \"requestId\": \"64b6e5c0-fb35-438d-90fc-d98a789b3c1e\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 7900
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.0297029702970297)\\n{\"errorMessage\": \"(1.0, 0.0297029702970297)\", \"errorType\": \"Exception\", \"requestId\": \"b553371b-de82-48ce-983f-898e14877828\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.0297029702970297)\\n{\"errorMessage\": \"(1.0, 0.0297029702970297)\", \"errorType\": \"Exception\", \"requestId\": \"b553371b-de82-48ce-983f-898e14877828\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 8000
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.04950495049504951)\\n{\"errorMessage\": \"(1.0, 0.04950495049504951)\", \"errorType\": \"Exception\", \"requestId\": \"33e3158e-3fe7-44fc-8513-95b14e5c8b05\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.04950495049504951)\\n{\"errorMessage\": \"(1.0, 0.04950495049504951)\", \"errorType\": \"Exception\", \"requestId\": \"33e3158e-3fe7-44fc-8513-95b14e5c8b05\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 8100
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.06930693069306931)\\n{\"errorMessage\": \"(1.0, 0.06930693069306931)\", \"errorType\": \"Exception\", \"requestId\": \"7e12fec0-9cd7-4f4a-b1bb-1381181ba8c7\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.06930693069306931)\\n{\"errorMessage\": \"(1.0, 0.06930693069306931)\", \"errorType\": \"Exception\", \"requestId\": \"7e12fec0-9cd7-4f4a-b1bb-1381181ba8c7\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 8200
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.0594059405940594)\\n{\"errorMessage\": \"(1.0, 0.0594059405940594)\", \"errorType\": \"Exception\", \"requestId\": \"867fc645-4276-4602-87da-00d47a44d79a\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.0594059405940594)\\n{\"errorMessage\": \"(1.0, 0.0594059405940594)\", \"errorType\": \"Exception\", \"requestId\": \"867fc645-4276-4602-87da-00d47a44d79a\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 8300
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.0297029702970297)\\n{\"errorMessage\": \"(1.0, 0.0297029702970297)\", \"errorType\": \"Exception\", \"requestId\": \"27518581-157c-4b13-8ec1-abbfb0b21685\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.0297029702970297)\\n{\"errorMessage\": \"(1.0, 0.0297029702970297)\", \"errorType\": \"Exception\", \"requestId\": \"27518581-157c-4b13-8ec1-abbfb0b21685\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 8400
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.04950495049504951)\\n{\"errorMessage\": \"(1.0, 0.04950495049504951)\", \"errorType\": \"Exception\", \"requestId\": \"156d542f-047a-4d06-8298-829f995348f5\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.04950495049504951)\\n{\"errorMessage\": \"(1.0, 0.04950495049504951)\", \"errorType\": \"Exception\", \"requestId\": \"156d542f-047a-4d06-8298-829f995348f5\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 8500
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.1188118811881188)\\n{\"errorMessage\": \"(1.0, 0.1188118811881188)\", \"errorType\": \"Exception\", \"requestId\": \"bf2a65f7-1a72-49ba-8e04-6d8d00983626\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.1188118811881188)\\n{\"errorMessage\": \"(1.0, 0.1188118811881188)\", \"errorType\": \"Exception\", \"requestId\": \"bf2a65f7-1a72-49ba-8e04-6d8d00983626\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 8600
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.06930693069306931)\\n{\"errorMessage\": \"(1.0, 0.06930693069306931)\", \"errorType\": \"Exception\", \"requestId\": \"9b729f33-104b-44c5-8b31-22957cdfee86\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.06930693069306931)\\n{\"errorMessage\": \"(1.0, 0.06930693069306931)\", \"errorType\": \"Exception\", \"requestId\": \"9b729f33-104b-44c5-8b31-22957cdfee86\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 8700
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.07920792079207921)\\n{\"errorMessage\": \"(1.0, 0.07920792079207921)\", \"errorType\": \"Exception\", \"requestId\": \"bbd3375e-f33f-4f26-b30d-022b897af553\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.07920792079207921)\\n{\"errorMessage\": \"(1.0, 0.07920792079207921)\", \"errorType\": \"Exception\", \"requestId\": \"bbd3375e-f33f-4f26-b30d-022b897af553\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 8800
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.0891089108910891)\\n{\"errorMessage\": \"(1.0, 0.0891089108910891)\", \"errorType\": \"Exception\", \"requestId\": \"0e6b403d-62a9-47ab-bee2-f27943a2557d\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.0891089108910891)\\n{\"errorMessage\": \"(1.0, 0.0891089108910891)\", \"errorType\": \"Exception\", \"requestId\": \"0e6b403d-62a9-47ab-bee2-f27943a2557d\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 8900
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.0297029702970297)\\n{\"errorMessage\": \"(1.0, 0.0297029702970297)\", \"errorType\": \"Exception\", \"requestId\": \"fc45c93c-bd01-4bbf-9b41-34e6757b6e89\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.0297029702970297)\\n{\"errorMessage\": \"(1.0, 0.0297029702970297)\", \"errorType\": \"Exception\", \"requestId\": \"fc45c93c-bd01-4bbf-9b41-34e6757b6e89\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 9000
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.039603960396039604)\\n{\"errorMessage\": \"(1.0, 0.039603960396039604)\", \"errorType\": \"Exception\", \"requestId\": \"ffe4b568-2748-490b-9a11-cf7871611025\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.039603960396039604)\\n{\"errorMessage\": \"(1.0, 0.039603960396039604)\", \"errorType\": \"Exception\", \"requestId\": \"ffe4b568-2748-490b-9a11-cf7871611025\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 9100
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.0297029702970297)\\n{\"errorMessage\": \"(1.0, 0.0297029702970297)\", \"errorType\": \"Exception\", \"requestId\": \"f3166ffc-c9a8-4199-a867-d0e4efd68cea\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.0297029702970297)\\n{\"errorMessage\": \"(1.0, 0.0297029702970297)\", \"errorType\": \"Exception\", \"requestId\": \"f3166ffc-c9a8-4199-a867-d0e4efd68cea\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 9200
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.0594059405940594)\\n{\"errorMessage\": \"(1.0, 0.0594059405940594)\", \"errorType\": \"Exception\", \"requestId\": \"7cd50d90-117c-4850-9353-64b4a7e0b73b\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.0594059405940594)\\n{\"errorMessage\": \"(1.0, 0.0594059405940594)\", \"errorType\": \"Exception\", \"requestId\": \"7cd50d90-117c-4850-9353-64b4a7e0b73b\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 9300
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.06930693069306931)\\n{\"errorMessage\": \"(1.0, 0.06930693069306931)\", \"errorType\": \"Exception\", \"requestId\": \"65bb4f83-d5e6-433c-83c7-6157fb51a30d\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.06930693069306931)\\n{\"errorMessage\": \"(1.0, 0.06930693069306931)\", \"errorType\": \"Exception\", \"requestId\": \"65bb4f83-d5e6-433c-83c7-6157fb51a30d\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 9400
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.06930693069306931)\\n{\"errorMessage\": \"(1.0, 0.06930693069306931)\", \"errorType\": \"Exception\", \"requestId\": \"d5ca4a14-77c5-48f8-a976-397c4f8edd3e\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.06930693069306931)\\n{\"errorMessage\": \"(1.0, 0.06930693069306931)\", \"errorType\": \"Exception\", \"requestId\": \"d5ca4a14-77c5-48f8-a976-397c4f8edd3e\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 9500
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.0594059405940594)\\n{\"errorMessage\": \"(1.0, 0.0594059405940594)\", \"errorType\": \"Exception\", \"requestId\": \"66f2fd70-8022-487f-aa7f-fe0b1e4ec21d\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.0594059405940594)\\n{\"errorMessage\": \"(1.0, 0.0594059405940594)\", \"errorType\": \"Exception\", \"requestId\": \"66f2fd70-8022-487f-aa7f-fe0b1e4ec21d\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 9600
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.039603960396039604)\\n{\"errorMessage\": \"(1.0, 0.039603960396039604)\", \"errorType\": \"Exception\", \"requestId\": \"43432350-ec02-4665-a14b-b988b5c75879\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.039603960396039604)\\n{\"errorMessage\": \"(1.0, 0.039603960396039604)\", \"errorType\": \"Exception\", \"requestId\": \"43432350-ec02-4665-a14b-b988b5c75879\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 9700
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.04950495049504951)\\n{\"errorMessage\": \"(1.0, 0.04950495049504951)\", \"errorType\": \"Exception\", \"requestId\": \"2ecffa3b-e03d-49da-957c-e7fb2c5bf397\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.04950495049504951)\\n{\"errorMessage\": \"(1.0, 0.04950495049504951)\", \"errorType\": \"Exception\", \"requestId\": \"2ecffa3b-e03d-49da-957c-e7fb2c5bf397\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 9800
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.0297029702970297)\\n{\"errorMessage\": \"(1.0, 0.0297029702970297)\", \"errorType\": \"Exception\", \"requestId\": \"2dda851b-aacb-4798-9263-762d982eb75f\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.0297029702970297)\\n{\"errorMessage\": \"(1.0, 0.0297029702970297)\", \"errorType\": \"Exception\", \"requestId\": \"2dda851b-aacb-4798-9263-762d982eb75f\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 9900
}
{
  "sandboxLog": "[ERROR] Exception: (1.0, 0.04950495049504951)\\n{\"errorMessage\": \"(1.0, 0.04950495049504951)\", \"errorType\": \"Exception\", \"requestId\": \"ccdf3349-d893-455d-8b52-51d02b1a07b4\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "lambdaLog": "[ERROR] Exception: (1.0, 0.04950495049504951)\\n{\"errorMessage\": \"(1.0, 0.04950495049504951)\", \"errorType\": \"Exception\", \"requestId\": \"ccdf3349-d893-455d-8b52-51d02b1a07b4\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 814, in run\\n    result[Product.SQUID_INK] = self.ink_strategy(state, traderObject)\\n\", \"  File \\\"/var/task/trader.py\\\", line 800, in ink_strategy\\n    raise Exception(spearman_corr(np.array([1, 2, 3, 4]), np.array([3, 4, 4, 5])))\\n\"]}",
  "timestamp": 10000
}
{
  "sandboxLog": "Lambda errors have reached maximum value for submission 66d055e1-18be-4c26-b2d8-a32add5bba15",
  "lambdaLog": null,
  "timestamp": 133230
}



Activities log:
day;timestamp;product;bid_price_1;bid_volume_1;bid_price_2;bid_volume_2;bid_price_3;bid_volume_3;ask_price_1;ask_volume_1;ask_price_2;ask_volume_2;ask_price_3;ask_volume_3;mid_price;profit_and_loss




Trade History:
null