Sandbox logs:
{
  "sandboxLog": "",
  "lambdaLog": "[[0,\"\",[[\"RAINFOREST_RESIN\",\"RAINFOREST_RESIN\",1],[\"SQUID_INK\",\"SQUID_INK\",1],[\"KELP\",\"KELP\",1]],{\"KELP\":[{\"2028\":23},{\"2032\":-23}],\"RAINFOREST_RESIN\":[{\"9998\":9,\"9995\":23},{\"10005\":-23}],\"SQUID_INK\":[{\"1968\":23},{\"1971\":-23}]},[],[],{},[{},{}]],[[\"RAINFOREST_RESIN\",9998,50],[\"RAINFOREST_RESIN\",10004,-50],[\"KELP\",2029,50],[\"KELP\",2031,-50],[\"SQUID_INK\",1969,50],[\"SQUID_INK\",1970,-50]],1,\"\",\"\"]",
  "timestamp": 0
}
{
  "sandboxLog": "",
  "lambdaLog": "[[100,\"{\\\"kelp_last_price\\\": 2030.0, \\\"ink_last_price\\\": 1969.5}\",[[\"RAINFOREST_RESIN\",\"RAINFOREST_RESIN\",1],[\"SQUID_INK\",\"SQUID_INK\",1],[\"KELP\",\"KELP\",1]],{\"KELP\":[{\"2030\":2,\"2028\":22},{\"2032\":-22}],\"RAINFOREST_RESIN\":[{\"10000\":2,\"9998\":4,\"9996\":1,\"9995\":21},{\"10004\":-1,\"10005\":-21}],\"SQUID_INK\":[{\"1970\":1,\"1969\":2,\"1967\":22},{\"1971\":-22}]},[],[],{},[{},{}]],[[\"RAINFOREST_RESIN\",10002,-1],[\"RAINFOREST_RESIN\",9998,50],[\"RAINFOREST_RESIN\",10003,-49],[\"KELP\",2031,-1],[\"KELP\",2029,50],[\"KELP\",2031,-49],[\"SQUID_INK\",1968,50],[\"SQUID_INK\",1970,-50]],1,\"{\\\"kelp_last_price\\\": 2030.0, \\\"ink_last_price\\\": 1969.5}\",\"\"]",
  "timestamp": 100
}
{
  "sandboxLog": "",
  "lambdaLog": "[[200,\"{\\\"kelp_last_price\\\": 2030.0, \\\"ink_last_price\\\": 1969.0}\",[[\"RAINFOREST_RESIN\",\"RAINFOREST_RESIN\",1],[\"SQUID_INK\",\"SQUID_INK\",1],[\"KELP\",\"KELP\",1]],{\"KELP\":[{\"2029\":1,\"2028\":21},{\"2032\":-22}],\"RAINFOREST_RESIN\":[{\"9996\":1,\"9995\":21},{\"10004\":-1,\"10005\":-21}],\"SQUID_INK\":[{\"1966\":1,\"1965\":21},{\"1969\":-22}]},[[\"RAINFOREST_RESIN\",10002.0,1,\"\",\"SUBMISSION\",100],[\"SQUID_INK\",1970.0,1,\"\",\"SUBMISSION\",100],[\"KELP\",2031.0,1,\"\",\"SUBMISSION\",100]],[],{\"KELP\":-1,\"RAINFOREST_RESIN\":-1,\"SQUID_INK\":-1},[{},{}]],[[\"RAINFOREST_RESIN\",9997,51],[\"RAINFOREST_RESIN\",10003,-49],[\"KELP\",2029,51],[\"KELP\",2031,-49],[\"SQUID_INK\",1967,51],[\"SQUID_INK\",1968,-49]],1,\"{\\\"kelp_last_price\\\": 2030.0, \\\"ink_last_price\\\": 1969.0}\",\"\"]",
  "timestamp": 200
}
{
  "sandboxLog": "",
  "lambdaLog": "[[300,\"{\\\"kelp_last_price\\\": 2030.0, \\\"ink_last_price\\\": 1967.0}\",[[\"RAINFOREST_RESIN\",\"RAINFOREST_RESIN\",1],[\"SQUID_INK\",\"SQUID_INK\",1],[\"KELP\",\"KELP\",1]],{\"KELP\":[{\"2031\":1,\"2029\":26},{\"2032\":-26}],\"RAINFOREST_RESIN\":[{\"9995\":26},{\"10005\":-26}],\"SQUID_INK\":[{\"1967\":1,\"1965\":26},{\"1968\":-26}]},[[\"RAINFOREST_RESIN\",10003.0,1,\"\",\"SUBMISSION\",200],[\"SQUID_INK\",1968.0,1,\"\",\"SUBMISSION\",200],[\"KELP\",2031.0,1,\"\",\"SUBMISSION\",200]],[],{\"KELP\":-2,\"RAINFOREST_RESIN\":-2,\"SQUID_INK\":-2},[{},{}]],[[\"RAINFOREST_RESIN\",9996,52],[\"RAINFOREST_RESIN\",10004,-48],[\"KELP\",2030,52],[\"KELP\",2031,-48],[\"SQUID_INK\",1966,52],[\"SQUID_INK\",1967,-48]],1,\"{\\\"kelp_last_price\\\": 2030.0, \\\"ink_last_price\\\": 1967.0}\",\"\"]",
  "timestamp": 300
}
{
  "sandboxLog": "",
  "lambdaLog": "[[400,\"{\\\"kelp_last_price\\\": 2030.3854717980296, \\\"ink_last_price\\\": 1966.5}\",[[\"RAINFOREST_RESIN\",\"RAINFOREST_RESIN\",1],[\"SQUID_INK\",\"SQUID_INK\",1],[\"KELP\",\"KELP\",1]],{\"KELP\":[{\"2029\":2,\"2028\":26},{\"2032\":-28}],\"RAINFOREST_RESIN\":[{\"9998\":8,\"9996\":2,\"9995\":26},{\"10004\":-2,\"10005\":-26}],\"SQUID_INK\":[{\"1966\":28},{\"1969\":-28}]},[[\"RAINFOREST_RESIN\",10003.0,1,\"\",\"SUBMISSION\",200],[\"SQUID_INK\",1967.0,1,\"\",\"SUBMISSION\",300],[\"KELP\",2031.0,1,\"\",\"SUBMISSION\",300]],[],{\"KELP\":-3,\"RAINFOREST_RESIN\":-2,\"SQUID_INK\":-3},[{},{}]],[[\"RAINFOREST_RESIN\",9998,52],[\"RAINFOREST_RESIN\",10003,-48],[\"KELP\",2030,53],[\"KELP\",2031,-47],[\"SQUID_INK\",1967,53],[\"SQUID_INK\",1968,-47]],1,\"{\\\"kelp_last_price\\\": 2030.3854717980296, \\\"ink_last_price\\\": 1966.5}\",\"\"]",
  "timestamp": 400
}
{
  "sandboxLog": "",
  "lambdaLog": "[[500,\"{\\\"kelp_last_price\\\": {\\\"py/reduce\\\": [{\\\"py/function\\\": \\\"numpy.core.multiarray.scalar\\\"}, {\\\"py/tuple\\\": [{\\\"py/reduce\\\": [{\\\"py/type\\\": \\\"numpy.dtype\\\"}, {\\\"py/tuple\\\": [\\\"f8\\\", false, true]}, {\\\"py/tuple\\\": [3, \\\"<\\\", null, null, null, -1, -1, 0]}]}, {\\\"py/b64\\\": \\\"DsmtUam4n0A=\\\"}]}]}, \\\"ink_last_price\\\": 1967.5}\",[[\"RAINFOREST_RESIN\",\"RAINFOREST_RESIN\",1],[\"SQUID_INK\",\"SQUID_INK\",1],[\"KELP\",\"KELP\",1]],{\"KELP\":[{\"2028\":24},{\"2030\":-3,\"2031\":-24}],\"RAINFOREST_RESIN\":[{\"9998\":8,\"9996\":1,\"9995\":23},{\"10004\":-1,\"10005\":-23}],\"SQUID_INK\":[{\"1966\":24},{\"1968\":-3,\"1970\":-24}]},[[\"RAINFOREST_RESIN\",10003.0,1,\"\",\"SUBMISSION\",200],[\"SQUID_INK\",1967.0,1,\"\",\"SUBMISSION\",300],[\"KELP\",2031.0,1,\"\",\"SUBMISSION\",300]],[[\"SQUID_INK\",1969.0,1,\"\",\"\",500],[\"KELP\",2030.0,1,\"\",\"\",500]],{\"KELP\":-3,\"RAINFOREST_RESIN\":-2,\"SQUID_INK\":-3},[{},{}]],[[\"RAINFOREST_RESIN\",9998,52],[\"RAINFOREST_RESIN\",10003,-48],[\"KELP\",2030,3],[\"KELP\",2029,50],[\"KELP\",2030,-47],[\"SQUID_INK\",1967,53],[\"SQUID_INK\",1969,-47]],1,\"{\\\"kelp_last_price\\\": {\\\"py/reduce\\\": [{\\\"py/function\\\": \\\"numpy.core.multiarray.scalar\\\"}, {\\\"py/tuple\\\": [{\\\"py/reduce\\\": [{\\\"py/type\\\": \\\"numpy.dtype\\\"}, {\\\"py/tuple\\\": [\\\"f8\\\", false, true]}, {\\\"py/tuple\\\": [3, \\\"<\\\", null, null, null, -1, -1, 0]}]}, {\\\"py/b64\\\": \\\"DsmtUam4n0A=\\\"}]}]}, \\\"ink_last_price\\\": 1967.5}\",\"\"]",
  "timestamp": 500
}
{
  "sandboxLog": "",
  "lambdaLog": "[[600,\"{\\\"kelp_last_price\\\": {\\\"py/reduce\\\": [{\\\"py/function\\\": \\\"numpy.core.multiarray.scalar\\\"}, {\\\"py/tuple\\\": [{\\\"py/reduce\\\": [{\\\"py/type\\\": \\\"numpy.dtype\\\"}, {\\\"py/tuple\\\": [\\\"f8\\\", false, true]}, {\\\"py/tuple\\\": [3, \\\"<\\\", null, null, null, -1, -1, 0]}]}, {\\\"py/b64\\\": \\\"762x1b22n0A=\\\"}]}]}, \\\"ink_last_price\\\": 1968.0}\",[[\"RAINFOREST_RESIN\",\"RAINFOREST_RESIN\",1],[\"SQUID_INK\",\"SQUID_INK\",1],[\"KELP\",\"KELP\",1]],{\"KELP\":[{\"2030\":5,\"2028\":30},{\"2031\":-30}],\"RAINFOREST_RESIN\":[{\"9996\":2,\"9995\":28},{\"10004\":-2,\"10005\":-28}],\"SQUID_INK\":[{\"1967\":5,\"1965\":30},{\"1968\":-30}]},[[\"RAINFOREST_RESIN\",10003.0,1,\"\",\"SUBMISSION\",200],[\"SQUID_INK\",1967.0,1,\"\",\"SUBMISSION\",300],[\"KELP\",2030.0,3,\"SUBMISSION\",\"\",500]],[[\"SQUID_INK\",1969.0,1,\"\",\"\",500],[\"KELP\",2030.0,1,\"\",\"\",500]],{\"KELP\":0,\"RAINFOREST_RESIN\":-2,\"SQUID_INK\":-3},[{},{}]],[[\"RAINFOREST_RESIN\",9997,52],[\"RAINFOREST_RESIN\",10003,-48],[\"KELP\",2029,50],[\"KELP\",2030,-50],[\"SQUID_INK\",1966,53],[\"SQUID_INK\",1967,-47]],1,\"{\\\"kelp_last_price\\\": {\\\"py/reduce\\\": [{\\\"py/function\\\": \\\"numpy.core.multiarray.scalar\\\"}, {\\\"py/tuple\\\": [{\\\"py/reduce\\\": [{\\\"py/type\\\": \\\"numpy.dtype\\\"}, {\\\"py/tuple\\\": [\\\"f8\\\", false, true]}, {\\\"py/tuple\\\": [3, \\\"<\\\", null, null, null, -1, -1, 0]}]}, {\\\"py/b64\\\": \\\"762x1b22n0A=\\\"}]}]}, \\\"ink_last_price\\\": 1968.0}\",\"\"]",
  "timestamp": 600
}
{
  "sandboxLog": "",
  "lambdaLog": "[[700,\"{\\\"kelp_last_price\\\": {\\\"py/reduce\\\": [{\\\"py/function\\\": \\\"numpy.core.multiarray.scalar\\\"}, {\\\"py/tuple\\\": [{\\\"py/reduce\\\": [{\\\"py/type\\\": \\\"numpy.dtype\\\"}, {\\\"py/tuple\\\": [\\\"f8\\\", false, true]}, {\\\"py/tuple\\\": [3, \\\"<\\\", null, null, null, -1, -1, 0]}]}, {\\\"py/b64\\\": \\\"2qMrF5y1n0A=\\\"}]}]}, \\\"ink_last_price\\\": 1966.5}\",[[\"RAINFOREST_RESIN\",\"RAINFOREST_RESIN\",1],[\"SQUID_INK\",\"SQUID_INK\",1],[\"KELP\",\"KELP\",1]],{\"KELP\":[{\"2028\":22},{\"2032\":-23}],\"RAINFOREST_RESIN\":[{\"9996\":1,\"9995\":22},{\"10004\":-1,\"10005\":-22}],\"SQUID_INK\":[{\"1967\":22},{\"1970\":-23}]},[[\"RAINFOREST_RESIN\",10003.0,1,\"\",\"SUBMISSION\",200],[\"SQUID_INK\",1967.0,5,\"\",\"SUBMISSION\",600],[\"SQUID_INK\",1966.0,14,\"SUBMISSION\",\"\",600],[\"KELP\",2030.0,5,\"\",\"SUBMISSION\",600],[\"KELP\",2029.0,14,\"SUBMISSION\",\"\",600]],[[\"SQUID_INK\",1967.0,1,\"\",\"\",700],[\"KELP\",2028.0,1,\"\",\"\",700]],{\"KELP\":9,\"RAINFOREST_RESIN\":-2,\"SQUID_INK\":6},[{},{}]],[[\"RAINFOREST_RESIN\",9997,52],[\"RAINFOREST_RESIN\",10003,-48],[\"KELP\",2029,41],[\"KELP\",2031,-59],[\"SQUID_INK\",1968,44],[\"SQUID_INK\",1969,-56]],1,\"{\\\"kelp_last_price\\\": {\\\"py/reduce\\\": [{\\\"py/function\\\": \\\"numpy.core.multiarray.scalar\\\"}, {\\\"py/tuple\\\": [{\\\"py/reduce\\\": [{\\\"py/type\\\": \\\"numpy.dtype\\\"}, {\\\"py/tuple\\\": [\\\"f8\\\", false, true]}, {\\\"py/tuple\\\": [3, \\\"<\\\", null, null, null, -1, -1, 0]}]}, {\\\"py/b64\\\": \\\"2qMrF5y1n0A=\\\"}]}]}, \\\"ink_last_price\\\": 1966.5}\",\"\"]",
  "timestamp": 700
}
{
  "sandboxLog": "",
  "lambdaLog": "[[800,\"{\\\"kelp_last_price\\\": {\\\"py/reduce\\\": [{\\\"py/function\\\": \\\"numpy.core.multiarray.scalar\\\"}, {\\\"py/tuple\\\": [{\\\"py/reduce\\\": [{\\\"py/type\\\": \\\"numpy.dtype\\\"}, {\\\"py/tuple\\\": [\\\"f8\\\", false, true]}, {\\\"py/tuple\\\": [3, \\\"<\\\", null, null, null, -1, -1, 0]}]}, {\\\"py/b64\\\": \\\"Zhj0lde2n0A=\\\"}]}]}, \\\"ink_last_price\\\": 1968.5}\",[[\"RAINFOREST_RESIN\",\"RAINFOREST_RESIN\",1],[\"SQUID_INK\",\"SQUID_INK\",1],[\"KELP\",\"KELP\",1]],{\"KELP\":[{\"2028\":25},{\"2030\":-3,\"2032\":-25}],\"RAINFOREST_RESIN\":[{\"9996\":1,\"9995\":24},{\"10000\":-3,\"10004\":-1,\"10005\":-24}],\"SQUID_INK\":[{\"1967\":25},{\"1968\":-3,\"1970\":-25}]},[[\"RAINFOREST_RESIN\",10003.0,1,\"\",\"SUBMISSION\",200],[\"SQUID_INK\",1967.0,5,\"\",\"SUBMISSION\",600],[\"SQUID_INK\",1966.0,14,\"SUBMISSION\",\"\",600],[\"KELP\",2030.0,5,\"\",\"SUBMISSION\",600],[\"KELP\",2029.0,14,\"SUBMISSION\",\"\",600]],[[\"SQUID_INK\",1967.0,1,\"\",\"\",700],[\"KELP\",2028.0,1,\"\",\"\",700]],{\"KELP\":9,\"RAINFOREST_RESIN\":-2,\"SQUID_INK\":6},[{},{}]],[[\"RAINFOREST_RESIN\",10000,2],[\"RAINFOREST_RESIN\",9997,50],[\"RAINFOREST_RESIN\",10003,-48],[\"KELP\",2029,41],[\"KELP\",2031,-59],[\"SQUID_INK\",1968,44],[\"SQUID_INK\",1969,-56]],1,\"{\\\"kelp_last_price\\\": {\\\"py/reduce\\\": [{\\\"py/function\\\": \\\"numpy.core.multiarray.scalar\\\"}, {\\\"py/tuple\\\": [{\\\"py/reduce\\\": [{\\\"py/type\\\": \\\"numpy.dtype\\\"}, {\\\"py/tuple\\\": [\\\"f8\\\", false, true]}, {\\\"py/tuple\\\": [3, \\\"<\\\", null, null, null, -1, -1, 0]}]}, {\\\"py/b64\\\": \\\"Zhj0lde2n0A=\\\"}]}]}, \\\"ink_last_price\\\": 1968.5}\",\"\"]",
  "timestamp": 800
}
{
  "sandboxLog": "",
  "lambdaLog": "[[900,\"{\\\"kelp_last_price\\\": {\\\"py/reduce\\\": [{\\\"py/function\\\": \\\"numpy.core.multiarray.scalar\\\"}, {\\\"py/tuple\\\": [{\\\"py/reduce\\\": [{\\\"py/type\\\": \\\"numpy.dtype\\\"}, {\\\"py/tuple\\\": [\\\"f8\\\", false, true]}, {\\\"py/tuple\\\": [3, \\\"<\\\", null, null, null, -1, -1, 0]}]}, {\\\"py/b64\\\": \\\"ZHuIHLy3n0A=\\\"}]}]}, \\\"ink_last_price\\\": 1968.5}\",[[\"RAINFOREST_RESIN\",\"RAINFOREST_RESIN\",1],[\"SQUID_INK\",\"SQUID_INK\",1],[\"KELP\",\"KELP\",1]],{\"KELP\":[{\"2029\":21},{\"2032\":-21}],\"RAINFOREST_RESIN\":[{\"9996\":1,\"9995\":20},{\"10004\":-1,\"10005\":-20}],\"SQUID_INK\":[{\"1966\":21},{\"1970\":-21}]},[[\"RAINFOREST_RESIN\",10000.0,2,\"SUBMISSION\",\"\",800],[\"RAINFOREST_RESIN\",9997.0,1,\"SUBMISSION\",\"\",800],[\"SQUID_INK\",1968.0,3,\"SUBMISSION\",\"\",800],[\"SQUID_INK\",1968.0,1,\"SUBMISSION\",\"\",800],[\"KELP\",2029.0,1,\"SUBMISSION\",\"\",800]],[[\"SQUID_INK\",1967.0,1,\"\",\"\",700],[\"KELP\",2028.0,1,\"\",\"\",700]],{\"KELP\":10,\"RAINFOREST_RESIN\":1,\"SQUID_INK\":10},[{},{}]],[[\"RAINFOREST_RESIN\",9998,11],[\"RAINFOREST_RESIN\",9997,38],[\"RAINFOREST_RESIN\",10003,-51],[\"KELP\",2030,40],[\"KELP\",2031,-60],[\"SQUID_INK\",1967,40],[\"SQUID_INK\",1969,-60]],1,\"{\\\"kelp_last_price\\\": {\\\"py/reduce\\\": [{\\\"py/function\\\": \\\"numpy.core.multiarray.scalar\\\"}, {\\\"py/tuple\\\": [{\\\"py/reduce\\\": [{\\\"py/type\\\": \\\"numpy.dtype\\\"}, {\\\"py/tuple\\\": [\\\"f8\\\", false, true]}, {\\\"py/tuple\\\": [3, \\\"<\\\", null, null, null, -1, -1, 0]}]}, {\\\"py/b64\\\": \\\"ZHuIHLy3n0A=\\\"}]}]}, \\\"ink_last_price\\\": 1968.5}\",\"\"]",
  "timestamp": 900
}
{
  "sandboxLog": "",
  "lambdaLog": "[[1000,\"{\\\"kelp_last_price\\\": {\\\"py/reduce\\\": [{\\\"py/function\\\": \\\"numpy.core.multiarray.scalar\\\"}, {\\\"py/tuple\\\": [{\\\"py/reduce\\\": [{\\\"py/type\\\": \\\"numpy.dtype\\\"}, {\\\"py/tuple\\\": [\\\"f8\\\", false, true]}, {\\\"py/tuple\\\": [3, \\\"<\\\", null, null, null, -1, -1, 0]}]}, {\\\"py/b64\\\": \\\"Y7gA+ee5n0A=\\\"}]}]}, \\\"ink_last_price\\\": 1968.0}\",[[\"RAINFOREST_RESIN\",\"RAINFOREST_RESIN\",1],[\"SQUID_INK\",\"SQUID_INK\",1],[\"KELP\",\"KELP\",1]],{\"KELP\":[{\"2029\":31},{\"2032\":-31}],\"RAINFOREST_RESIN\":[{\"9996\":1,\"9995\":30},{\"10004\":-1,\"10005\":-30}],\"SQUID_INK\":[{\"1967\":31},{\"1970\":-31}]},[[\"RAINFOREST_RESIN\",9998.0,11,\"SUBMISSION\",\"\",900],[\"SQUID_INK\",1968.0,3,\"SUBMISSION\",\"\",800],[\"SQUID_INK\",1968.0,1,\"SUBMISSION\",\"\",800],[\"KELP\",2029.0,1,\"SUBMISSION\",\"\",800]],[[\"SQUID_INK\",1967.0,1,\"\",\"\",700],[\"KELP\",2028.0,1,\"\",\"\",700]],{\"KELP\":10,\"RAINFOREST_RESIN\":12,\"SQUID_INK\":10},[{},{}]],[[\"RAINFOREST_RESIN\",9997,38],[\"RAINFOREST_RESIN\",10003,-62],[\"KELP\",2030,40],[\"KELP\",2031,-60],[\"SQUID_INK\",1968,40],[\"SQUID_INK\",1969,-60]],1,\"{\\\"kelp_last_price\\\": {\\\"py/reduce\\\": [{\\\"py/function\\\": \\\"numpy.core.multiarray.scalar\\\"}, {\\\"py/tuple\\\": [{\\\"py/reduce\\\": [{\\\"py/type\\\": \\\"numpy.dtype\\\"}, {\\\"py/tuple\\\": [\\\"f8\\\", false, true]}, {\\\"py/tuple\\\": [3, \\\"<\\\", null, null, null, -1, -1, 0]}]}, {\\\"py/b64\\\": \\\"Y7gA+ee5n0A=\\\"}]}]}, \\\"ink_last_price\\\": 1968.0}\",\"\"]",
  "timestamp": 1000
}
{
  "sandboxLog": "",
  "lambdaLog": "[[1100,\"{\\\"kelp_last_price\\\": {\\\"py/reduce\\\": [{\\\"py/function\\\": \\\"numpy.core.multiarray.scalar\\\"}, {\\\"py/tuple\\\": [{\\\"py/reduce\\\": [{\\\"py/type\\\": \\\"numpy.dtype\\\"}, {\\\"py/tuple\\\": [\\\"f8\\\", false, true]}, {\\\"py/tuple\\\": [3, \\\"<\\\", null, null, null, -1, -1, 0]}]}, {\\\"py/b64\\\": \\\"HeYDYJe6n0A=\\\"}]}]}, \\\"ink_last_price\\\": 1968.5}\",[[\"RAINFOREST_RESIN\",\"RAINFOREST_RESIN\",1],[\"SQUID_INK\",\"SQUID_INK\",1],[\"KELP\",\"KELP\",1]],{\"KELP\":[{\"2029\":22},{\"2032\":-22}],\"RAINFOREST_RESIN\":[{\"9996\":1,\"9995\":21},{\"10002\":-6,\"10004\":-1,\"10005\":-21}],\"SQUID_INK\":[{\"1968\":22},{\"1971\":-22}]},[[\"RAINFOREST_RESIN\",9998.0,11,\"SUBMISSION\",\"\",900],[\"SQUID_INK\",1968.0,3,\"SUBMISSION\",\"\",800],[\"SQUID_INK\",1968.0,1,\"SUBMISSION\",\"\",800],[\"KELP\",2029.0,1,\"SUBMISSION\",\"\",800]],[[\"SQUID_INK\",1967.0,1,\"\",\"\",700],[\"KELP\",2028.0,1,\"\",\"\",700]],{\"KELP\":10,\"RAINFOREST_RESIN\":12,\"SQUID_INK\":10},[{},{}]],[[\"RAINFOREST_RESIN\",9997,38],[\"RAINFOREST_RESIN\",10002,-62],[\"KELP\",2030,40],[\"KELP\",2031,-60],[\"SQUID_INK\",1969,40],[\"SQUID_INK\",1970,-60]],1,\"{\\\"kelp_last_price\\\": {\\\"py/reduce\\\": [{\\\"py/function\\\": \\\"numpy.core.multiarray.scalar\\\"}, {\\\"py/tuple\\\": [{\\\"py/reduce\\\": [{\\\"py/type\\\": \\\"numpy.dtype\\\"}, {\\\"py/tuple\\\": [\\\"f8\\\", false, true]}, {\\\"py/tuple\\\": [3, \\\"<\\\", null, null, null, -1, -1, 0]}]}, {\\\"py/b64\\\": \\\"HeYDYJe6n0A=\\\"}]}]}, \\\"ink_last_price\\\": 1968.5}\",\"\"]",
  "timestamp": 1100
}
{
  "sandboxLog": "",
  "lambdaLog": "[[1200,\"{\\\"kelp_last_price\\\": {\\\"py/reduce\\\": [{\\\"py/function\\\": \\\"numpy.core.multiarray.scalar\\\"}, {\\\"py/tuple\\\": [{\\\"py/reduce\\\": [{\\\"py/type\\\": \\\"numpy.dtype\\\"}, {\\\"py/tuple\\\": [\\\"f8\\\", false, true]}, {\\\"py/tuple\\\": [3, \\\"<\\\", null, null, null, -1, -1, 0]}]}, {\\\"py/b64\\\": \\\"sApD6rS6n0A=\\\"}]}]}, \\\"ink_last_price\\\": 1969.5}\",[[\"RAINFOREST_RESIN\",\"RAINFOREST_RESIN\",1],[\"SQUID_INK\",\"SQUID_INK\",1],[\"KELP\",\"KELP\",1]],{\"KELP\":[{\"2029\":22},{\"2033\":-23}],\"RAINFOREST_RESIN\":[{\"9996\":1,\"9995\":22},{\"10004\":-1,\"10005\":-22}],\"SQUID_INK\":[{\"1968\":22},{\"1971\":-23}]},[[\"RAINFOREST_RESIN\",9998.0,11,\"SUBMISSION\",\"\",900],[\"SQUID_INK\",1968.0,3,\"SUBMISSION\",\"\",800],[\"SQUID_INK\",1968.0,1,\"SUBMISSION\",\"\",800],[\"KELP\",2029.0,1,\"SUBMISSION\",\"\",800]],[[\"SQUID_INK\",1968.0,1,\"\",\"\",1200],[\"KELP\",2029.0,1,\"\",\"\",1200]],{\"KELP\":10,\"RAINFOREST_RESIN\":12,\"SQUID_INK\":10},[{},{}]],[[\"RAINFOREST_RESIN\",9997,38],[\"RAINFOREST_RESIN\",10003,-62],[\"KELP\",2030,40],[\"KELP\",2032,-60],[\"SQUID_INK\",1969,40],[\"SQUID_INK\",1970,-60]],1,\"{\\\"kelp_last_price\\\": {\\\"py/reduce\\\": [{\\\"py/function\\\": \\\"numpy.core.multiarray.scalar\\\"}, {\\\"py/tuple\\\": [{\\\"py/reduce\\\": [{\\\"py/type\\\": \\\"numpy.dtype\\\"}, {\\\"py/tuple\\\": [\\\"f8\\\", false, true]}, {\\\"py/tuple\\\": [3, \\\"<\\\", null, null, null, -1, -1, 0]}]}, {\\\"py/b64\\\": \\\"sApD6rS6n0A=\\\"}]}]}, \\\"ink_last_price\\\": 1969.5}\",\"\"]",
  "timestamp": 1200
}
{
  "sandboxLog": "",
  "lambdaLog": "[[1300,\"{\\\"kelp_last_price\\\": {\\\"py/reduce\\\": [{\\\"py/function\\\": \\\"numpy.core.multiarray.scalar\\\"}, {\\\"py/tuple\\\": [{\\\"py/reduce\\\": [{\\\"py/type\\\": \\\"numpy.dtype\\\"}, {\\\"py/tuple\\\": [\\\"f8\\\", false, true]}, {\\\"py/tuple\\\": [3, \\\"<\\\", null, null, null, -1, -1, 0]}]}, {\\\"py/b64\\\": \\\"EnxwKN27n0A=\\\"}]}]}, \\\"ink_last_price\\\": 1969.5}\",[[\"RAINFOREST_RESIN\",\"RAINFOREST_RESIN\",1],[\"SQUID_INK\",\"SQUID_INK\",1],[\"KELP\",\"KELP\",1]],{\"KELP\":[{\"2029\":25},{\"2033\":-25}],\"RAINFOREST_RESIN\":[{\"9995\":25},{\"10005\":-25}],\"SQUID_INK\":[{\"1968\":25},{\"1971\":-25}]},[[\"RAINFOREST_RESIN\",9998.0,11,\"SUBMISSION\",\"\",900],[\"SQUID_INK\",1968.0,3,\"SUBMISSION\",\"\",800],[\"SQUID_INK\",1968.0,1,\"SUBMISSION\",\"\",800],[\"KELP\",2029.0,1,\"SUBMISSION\",\"\",800]],[[\"SQUID_INK\",1968.0,1,\"\",\"\",1200],[\"KELP\",2029.0,1,\"\",\"\",1200]],{\"KELP\":10,\"RAINFOREST_RESIN\":12,\"SQUID_INK\":10},[{},{}]],[[\"RAINFOREST_RESIN\",10002,-1],[\"RAINFOREST_RESIN\",9996,38],[\"RAINFOREST_RESIN\",10004,-61],[\"KELP\",2030,40],[\"KELP\",2032,-60],[\"SQUID_INK\",1969,40],[\"SQUID_INK\",1970,-60]],1,\"{\\\"kelp_last_price\\\": {\\\"py/reduce\\\": [{\\\"py/function\\\": \\\"numpy.core.multiarray.scalar\\\"}, {\\\"py/tuple\\\": [{\\\"py/reduce\\\": [{\\\"py/type\\\": \\\"numpy.dtype\\\"}, {\\\"py/tuple\\\": [\\\"f8\\\", false, true]}, {\\\"py/tuple\\\": [3, \\\"<\\\", null, null, null, -1, -1, 0]}]}, {\\\"py/b64\\\": \\\"EnxwKN27n0A=\\\"}]}]}, \\\"ink_last_price\\\": 1969.5}\",\"\"]",
  "timestamp": 1300
}
{
  "sandboxLog": "",
  "lambdaLog": "[[1400,\"{\\\"kelp_last_price\\\": {\\\"py/reduce\\\": [{\\\"py/function\\\": \\\"numpy.core.multiarray.scalar\\\"}, {\\\"py/tuple\\\": [{\\\"py/reduce\\\": [{\\\"py/type\\\": \\\"numpy.dtype\\\"}, {\\\"py/tuple\\\": [\\\"f8\\\", false, true]}, {\\\"py/tuple\\\": [3, \\\"<\\\", null, null, null, -1, -1, 0]}]}, {\\\"py/b64\\\": \\\"xqJ4LTm8n0A=\\\"}]}]}, \\\"ink_last_price\\\": 1969.5}\",[[\"RAINFOREST_RESIN\",\"RAINFOREST_RESIN\",1],[\"SQUID_INK\",\"SQUID_INK\",1],[\"KELP\",\"KELP\",1]],{\"KELP\":[{\"2029\":23},{\"2033\":-23}],\"RAINFOREST_RESIN\":[{\"9995\":23},{\"10000\":-6,\"10005\":-23}],\"SQUID_INK\":[{\"1968\":23},{\"1970\":-6,\"1972\":-23}]},[[\"RAINFOREST_RESIN\",10002.0,1,\"\",\"SUBMISSION\",1300],[\"SQUID_INK\",1968.0,3,\"SUBMISSION\",\"\",800],[\"SQUID_INK\",1968.0,1,\"SUBMISSION\",\"\",800],[\"KELP\",2029.0,1,\"SUBMISSION\",\"\",800]],[[\"SQUID_INK\",1968.0,1,\"\",\"\",1200],[\"KELP\",2029.0,1,\"\",\"\",1200]],{\"KELP\":10,\"RAINFOREST_RESIN\":11,\"SQUID_INK\":10},[{},{}]],[[\"RAINFOREST_RESIN\",9996,39],[\"RAINFOREST_RESIN\",10004,-61],[\"KELP\",2030,6],[\"KELP\",2030,34],[\"KELP\",2032,-60],[\"SQUID_INK\",1969,40],[\"SQUID_INK\",1971,-60]],1,\"{\\\"kelp_last_price\\\": {\\\"py/reduce\\\": [{\\\"py/function\\\": \\\"numpy.core.multiarray.scalar\\\"}, {\\\"py/tuple\\\": [{\\\"py/reduce\\\": [{\\\"py/type\\\": \\\"numpy.dtype\\\"}, {\\\"py/tuple\\\": [\\\"f8\\\", false, true]}, {\\\"py/tuple\\\": [3, \\\"<\\\", null, null, null, -1, -1, 0]}]}, {\\\"py/b64\\\": \\\"xqJ4LTm8n0A=\\\"}]}]}, \\\"ink_last_price\\\": 1969.5}\",\"\"]",
  "timestamp": 1400
}
{
  "sandboxLog": "",
  "lambdaLog": "[[1500,\"{\\\"kelp_last_price\\\": {\\\"py/reduce\\\": [{\\\"py/function\\\": \\\"numpy.core.multiarray.scalar\\\"}, {\\\"py/tuple\\\": [{\\\"py/reduce\\\": [{\\\"py/type\\\": \\\"numpy.dtype\\\"}, {\\\"py/tuple\\\": [\\\"f8\\\", false, true]}, {\\\"py/tuple\\\": [3, \\\"<\\\", null, null, null, -1, -1, 0]}]}, {\\\"py/b64\\\": \\\"0D3uvlq8n0A=\\\"}]}]}, \\\"ink_last_price\\\": 1970.0}\",[[\"RAINFOREST_RESIN\",\"RAINFOREST_RESIN\",1],[\"SQUID_INK\",\"SQUID_INK\",1],[\"KELP\",\"KELP\",1]],{\"KELP\":[{\"2032\":1,\"2029\":21},{\"2033\":-21}],\"RAINFOREST_RESIN\":[{\"9996\":1,\"9995\":20},{\"10004\":-1,\"10005\":-20}],\"SQUID_INK\":[{\"1971\":1,\"1969\":21},{\"1972\":-21}]},[[\"RAINFOREST_RESIN\",10002.0,1,\"\",\"SUBMISSION\",1300],[\"SQUID_INK\",1968.0,3,\"SUBMISSION\",\"\",800],[\"SQUID_INK\",1968.0,1,\"SUBMISSION\",\"\",800],[\"KELP\",2030.0,6,\"SUBMISSION\",\"\",1400]],[[\"SQUID_INK\",1968.0,1,\"\",\"\",1200],[\"KELP\",2029.0,1,\"\",\"\",1200]],{\"KELP\":16,\"RAINFOREST_RESIN\":11,\"SQUID_INK\":10},[{},{}]],[[\"RAINFOREST_RESIN\",9998,4],[\"RAINFOREST_RESIN\",9997,35],[\"RAINFOREST_RESIN\",10003,-61],[\"KELP\",2031,-1],[\"KELP\",2030,34],[\"KELP\",2032,-65],[\"SQUID_INK\",1971,-1],[\"SQUID_INK\",1970,40],[\"SQUID_INK\",1971,-59]],1,\"{\\\"kelp_last_price\\\": {\\\"py/reduce\\\": [{\\\"py/function\\\": \\\"numpy.core.multiarray.scalar\\\"}, {\\\"py/tuple\\\": [{\\\"py/reduce\\\": [{\\\"py/type\\\": \\\"numpy.dtype\\\"}, {\\\"py/tuple\\\": [\\\"f8\\\", false, true]}, {\\\"py/tuple\\\": [3, \\\"<\\\", null, null, null, -1, -1, 0]}]}, {\\\"py/b64\\\": \\\"0D3uvlq8n0A=\\\"}]}]}, \\\"ink_last_price\\\": 1970.0}\",\"\"]",
  "timestamp": 1500
}
{
  "sandboxLog": "",
  "lambdaLog": "[[1600,\"{\\\"kelp_last_price\\\": {\\\"py/reduce\\\": [{\\\"py/function\\\": \\\"numpy.core.multiarray.scalar\\\"}, {\\\"py/tuple\\\": [{\\\"py/reduce\\\": [{\\\"py/type\\\": \\\"numpy.dtype\\\"}, {\\\"py/tuple\\\": [\\\"f8\\\", false, true]}, {\\\"py/tuple\\\": [3, \\\"<\\\", null, null, null, -1, -1, 0]}]}, {\\\"py/b64\\\": \\\"xM6/5S28n0A=\\\"}]}]}, \\\"ink_last_price\\\": 1970.5}\",[[\"RAINFOREST_RESIN\",\"RAINFOREST_RESIN\",1],[\"SQUID_INK\",\"SQUID_INK\",1],[\"KELP\",\"KELP\",1]],{\"KELP\":[{\"2029\":30},{\"2033\":-30}],\"RAINFOREST_RESIN\":[{\"9996\":2,\"9995\":28},{\"10004\":-2,\"10005\":-28}],\"SQUID_INK\":[{\"1970\":30},{\"1974\":-30}]},[[\"RAINFOREST_RESIN\",9998.0,4,\"SUBMISSION\",\"\",1500],[\"SQUID_INK\",1971.0,1,\"\",\"SUBMISSION\",1500],[\"KELP\",2032.0,1,\"\",\"SUBMISSION\",1500]],[[\"SQUID_INK\",1968.0,1,\"\",\"\",1200],[\"KELP\",2029.0,1,\"\",\"\",1200]],{\"KELP\":15,\"RAINFOREST_RESIN\":15,\"SQUID_INK\":9},[{},{}]],[[\"RAINFOREST_RESIN\",9997,35],[\"RAINFOREST_RESIN\",10003,-65],[\"KELP\",2030,35],[\"KELP\",2032,-65],[\"SQUID_INK\",1971,41],[\"SQUID_INK\",1973,-59]],1,\"{\\\"kelp_last_price\\\": {\\\"py/reduce\\\": [{\\\"py/function\\\": \\\"numpy.core.multiarray.scalar\\\"}, {\\\"py/tuple\\\": [{\\\"py/reduce\\\": [{\\\"py/type\\\": \\\"numpy.dtype\\\"}, {\\\"py/tuple\\\": [\\\"f8\\\", false, true]}, {\\\"py/tuple\\\": [3, \\\"<\\\", null, null, null, -1, -1, 0]}]}, {\\\"py/b64\\\": \\\"xM6/5S28n0A=\\\"}]}]}, \\\"ink_last_price\\\": 1970.5}\",\"\"]",
  "timestamp": 1600
}
{
  "sandboxLog": "",
  "lambdaLog": "[[1700,\"{\\\"kelp_last_price\\\": {\\\"py/reduce\\\": [{\\\"py/function\\\": \\\"numpy.core.multiarray.scalar\\\"}, {\\\"py/tuple\\\": [{\\\"py/reduce\\\": [{\\\"py/type\\\": \\\"numpy.dtype\\\"}, {\\\"py/tuple\\\": [\\\"f8\\\", false, true]}, {\\\"py/tuple\\\": [3, \\\"<\\\", null, null, null, -1, -1, 0]}]}, {\\\"py/b64\\\": \\\"Uxmiggq8n0A=\\\"}]}]}, \\\"ink_last_price\\\": 1972.0}\",[[\"RAINFOREST_RESIN\",\"RAINFOREST_RESIN\",1],[\"SQUID_INK\",\"SQUID_INK\",1],[\"KELP\",\"KELP\",1]],{\"KELP\":[{\"2029\":28},{\"2031\":-8,\"2033\":-28}],\"RAINFOREST_RESIN\":[{\"9995\":28},{\"10005\":-28}],\"SQUID_INK\":[{\"1970\":28},{\"1972\":-8,\"1973\":-28}]},[[\"RAINFOREST_RESIN\",9998.0,4,\"SUBMISSION\",\"\",1500],[\"SQUID_INK\",1971.0,1,\"\",\"SUBMISSION\",1500],[\"KELP\",2032.0,1,\"\",\"SUBMISSION\",1500]],[[\"SQUID_INK\",1968.0,1,\"\",\"\",1200],[\"KELP\",2029.0,1,\"\",\"\",1200]],{\"KELP\":15,\"RAINFOREST_RESIN\":15,\"SQUID_INK\":9},[{},{}]],[[\"RAINFOREST_RESIN\",9996,35],[\"RAINFOREST_RESIN\",10004,-65],[\"KELP\",2030,35],[\"KELP\",2032,-65],[\"SQUID_INK\",1971,41],[\"SQUID_INK\",1972,-59]],1,\"{\\\"kelp_last_price\\\": {\\\"py/reduce\\\": [{\\\"py/function\\\": \\\"numpy.core.multiarray.scalar\\\"}, {\\\"py/tuple\\\": [{\\\"py/reduce\\\": [{\\\"py/type\\\": \\\"numpy.dtype\\\"}, {\\\"py/tuple\\\": [\\\"f8\\\", false, true]}, {\\\"py/tuple\\\": [3, \\\"<\\\", null, null, null, -1, -1, 0]}]}, {\\\"py/b64\\\": \\\"Uxmiggq8n0A=\\\"}]}]}, \\\"ink_last_price\\\": 1972.0}\",\"\"]",
  "timestamp": 1700
}
{
  "sandboxLog": "",
  "lambdaLog": "[[1800,\"{\\\"kelp_last_price\\\": {\\\"py/reduce\\\": [{\\\"py/function\\\": \\\"numpy.core.multiarray.scalar\\\"}, {\\\"py/tuple\\\": [{\\\"py/reduce\\\": [{\\\"py/type\\\": \\\"numpy.dtype\\\"}, {\\\"py/tuple\\\": [\\\"f8\\\", false, true]}, {\\\"py/tuple\\\": [3, \\\"<\\\", null, null, null, -1, -1, 0]}]}, {\\\"py/b64\\\": \\\"sKcXXPK7n0A=\\\"}]}]}, \\\"ink_last_price\\\": 1971.5}\",[[\"RAINFOREST_RESIN\",\"RAINFOREST_RESIN\",1],[\"SQUID_INK\",\"SQUID_INK\",1],[\"KELP\",\"KELP\",1]],{\"KELP\":[{\"2031\":4,\"2029\":23},{\"2033\":-23}],\"RAINFOREST_RESIN\":[{\"10000\":4,\"9995\":23},{\"10002\":-10,\"10005\":-23}],\"SQUID_INK\":[{\"1972\":4,\"1971\":23},{\"1974\":-23}]},[[\"RAINFOREST_RESIN\",9998.0,4,\"SUBMISSION\",\"\",1500],[\"SQUID_INK\",1971.0,1,\"\",\"SUBMISSION\",1500],[\"KELP\",2032.0,1,\"\",\"SUBMISSION\",1500]],[[\"SQUID_INK\",1968.0,1,\"\",\"\",1200],[\"KELP\",2029.0,1,\"\",\"\",1200]],{\"KELP\":15,\"RAINFOREST_RESIN\":15,\"SQUID_INK\":9},[{},{}]],[[\"RAINFOREST_RESIN\",10000,-4],[\"RAINFOREST_RESIN\",9996,35],[\"RAINFOREST_RESIN\",10002,-61],[\"KELP\",2031,-4],[\"KELP\",2030,35],[\"KELP\",2032,-61],[\"SQUID_INK\",1972,41],[\"SQUID_INK\",1973,-59]],1,\"{\\\"kelp_last_price\\\": {\\\"py/reduce\\\": [{\\\"py/function\\\": \\\"numpy.core.multiarray.scalar\\\"}, {\\\"py/tuple\\\": [{\\\"py/reduce\\\": [{\\\"py/type\\\": \\\"numpy.dtype\\\"}, {\\\"py/tuple\\\": [\\\"f8\\\", false, true]}, {\\\"py/tuple\\\": [3, \\\"<\\\", null, null, null, -1, -1, 0]}]}, {\\\"py/b64\\\": \\\"sKcXXPK7n0A=\\\"}]}]}, \\\"ink_last_price\\\": 1971.5}\",\"\"]",
  "timestamp": 1800
}
{
  "sandboxLog": "",
  "lambdaLog": "[[1900,\"{\\\"kelp_last_price\\\": {\\\"py/reduce\\\": [{\\\"py/function\\\": \\\"numpy.core.multiarray.scalar\\\"}, {\\\"py/tuple\\\": [{\\\"py/reduce\\\": [{\\\"py/type\\\": \\\"numpy.dtype\\\"}, {\\\"py/tuple\\\": [\\\"f8\\\", false, true]}, {\\\"py/tuple\\\": [3, \\\"<\\\", null, null, null, -1, -1, 0]}]}, {\\\"py/b64\\\": \\\"YTwE+PC7n0A=\\\"}]}]}, \\\"ink_last_price\\\": 1972.5}\",[[\"RAINFOREST_RESIN\",\"RAINFOREST_RESIN\",1],[\"SQUID_INK\",\"SQUID_INK\",1],[\"KELP\",\"KELP\",1]],{\"KELP\":[{\"2030\":31},{\"2033\":-32}],\"RAINFOREST_RESIN\":[{\"9996\":2,\"9995\":30},{\"10004\":-2,\"10005\":-30}],\"SQUID_INK\":[{\"1969\":31},{\"1972\":-32}]},[[\"RAINFOREST_RESIN\",10000.0,4,\"\",\"SUBMISSION\",1800],[\"SQUID_INK\",1971.0,1,\"\",\"SUBMISSION\",1500],[\"KELP\",2031.0,4,\"\",\"SUBMISSION\",1800]],[[\"SQUID_INK\",1969.0,1,\"\",\"\",1900],[\"KELP\",2030.0,1,\"\",\"\",1900]],{\"KELP\":11,\"RAINFOREST_RESIN\":11,\"SQUID_INK\":9},[{},{}]],[[\"RAINFOREST_RESIN\",9997,39],[\"RAINFOREST_RESIN\",10003,-61],[\"KELP\",2031,39],[\"KELP\",2032,-61],[\"SQUID_INK\",1970,41],[\"SQUID_INK\",1971,-59]],1,\"{\\\"kelp_last_price\\\": {\\\"py/reduce\\\": [{\\\"py/function\\\": \\\"numpy.core.multiarray.scalar\\\"}, {\\\"py/tuple\\\": [{\\\"py/reduce\\\": [{\\\"py/type\\\": \\\"numpy.dtype\\\"}, {\\\"py/tuple\\\": [\\\"f8\\\", false, true]}, {\\\"py/tuple\\\": [3, \\\"<\\\", null, null, null, -1, -1, 0]}]}, {\\\"py/b64\\\": \\\"YTwE+PC7n0A=\\\"}]}]}, \\\"ink_last_price\\\": 1972.5}\",\"\"]",
  "timestamp": 1900
}
{
  "sandboxLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"bbdfe7de-0f02-4a41-ada5-0240955095f9\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "lambdaLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"bbdfe7de-0f02-4a41-ada5-0240955095f9\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "timestamp": 2000
}
{
  "sandboxLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"e54026ed-f6f1-4df7-952b-3828cac7203f\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "lambdaLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"e54026ed-f6f1-4df7-952b-3828cac7203f\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "timestamp": 2100
}
{
  "sandboxLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"0d5f8374-4433-4dc2-8b50-e0687c64fbbf\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "lambdaLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"0d5f8374-4433-4dc2-8b50-e0687c64fbbf\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "timestamp": 2200
}
{
  "sandboxLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"2748154e-093f-4909-83fb-4b2cd9fa5266\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "lambdaLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"2748154e-093f-4909-83fb-4b2cd9fa5266\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "timestamp": 2300
}
{
  "sandboxLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"2293dad9-73f8-45c2-9f2c-c9bfc08a6676\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "lambdaLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"2293dad9-73f8-45c2-9f2c-c9bfc08a6676\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "timestamp": 2400
}
{
  "sandboxLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"e62ae245-cfdb-432a-8bf3-c7fc14a9f387\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "lambdaLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"e62ae245-cfdb-432a-8bf3-c7fc14a9f387\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "timestamp": 2500
}
{
  "sandboxLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"39b878d6-6473-4664-9c54-bf589e1cb6b8\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "lambdaLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"39b878d6-6473-4664-9c54-bf589e1cb6b8\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "timestamp": 2600
}
{
  "sandboxLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"84e3ea3f-dd41-4ce8-a964-f240c03dbff7\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "lambdaLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"84e3ea3f-dd41-4ce8-a964-f240c03dbff7\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "timestamp": 2700
}
{
  "sandboxLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"7bad328f-fd96-4b68-931c-13b06b46bd8c\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "lambdaLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"7bad328f-fd96-4b68-931c-13b06b46bd8c\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "timestamp": 2800
}
{
  "sandboxLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"046feedc-5687-42ad-b4a4-929c5cfe112a\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "lambdaLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"046feedc-5687-42ad-b4a4-929c5cfe112a\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "timestamp": 2900
}
{
  "sandboxLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"cda638fc-57ce-47b9-820f-3cde9e7486cb\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "lambdaLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"cda638fc-57ce-47b9-820f-3cde9e7486cb\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "timestamp": 3000
}
{
  "sandboxLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"9a1a3a52-4de1-47c6-9587-b5347c6be18c\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "lambdaLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"9a1a3a52-4de1-47c6-9587-b5347c6be18c\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "timestamp": 3100
}
{
  "sandboxLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"5f48c186-014e-48f8-b825-64acb8b94354\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "lambdaLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"5f48c186-014e-48f8-b825-64acb8b94354\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "timestamp": 3200
}
{
  "sandboxLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"ff58a99a-07a4-44d1-b069-26c4b90e0c6e\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "lambdaLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"ff58a99a-07a4-44d1-b069-26c4b90e0c6e\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "timestamp": 3300
}
{
  "sandboxLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"681932ae-cfd7-49cb-8352-3ffb89822a2a\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "lambdaLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"681932ae-cfd7-49cb-8352-3ffb89822a2a\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "timestamp": 3400
}
{
  "sandboxLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"542c7df9-a55b-42fb-8350-27e468a96e4a\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "lambdaLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"542c7df9-a55b-42fb-8350-27e468a96e4a\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "timestamp": 3500
}
{
  "sandboxLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"d0ed2171-cd60-4dc5-ad2c-8a9e782bf048\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "lambdaLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"d0ed2171-cd60-4dc5-ad2c-8a9e782bf048\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "timestamp": 3600
}
{
  "sandboxLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"d9f13fe0-71a2-4ab8-bf87-95f32385b8a4\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "lambdaLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"d9f13fe0-71a2-4ab8-bf87-95f32385b8a4\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "timestamp": 3700
}
{
  "sandboxLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"9b4a5176-e89d-43ae-8e16-8fbb691d29ff\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "lambdaLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"9b4a5176-e89d-43ae-8e16-8fbb691d29ff\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "timestamp": 3800
}
{
  "sandboxLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"30999565-6304-47f1-a3cd-e627d10d3a5a\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "lambdaLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"30999565-6304-47f1-a3cd-e627d10d3a5a\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "timestamp": 3900
}
{
  "sandboxLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"d2f611b0-abd2-4fed-b5bb-c50f45670913\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "lambdaLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"d2f611b0-abd2-4fed-b5bb-c50f45670913\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "timestamp": 4000
}
{
  "sandboxLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"9fcf7219-493f-433a-9591-79f0669406df\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "lambdaLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"9fcf7219-493f-433a-9591-79f0669406df\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "timestamp": 4100
}
{
  "sandboxLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"3443f9b3-70e9-4ef9-8fac-88350267ad13\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "lambdaLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"3443f9b3-70e9-4ef9-8fac-88350267ad13\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "timestamp": 4200
}
{
  "sandboxLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"759fa2c5-377e-4da8-8efd-d3f1fdbf90ae\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "lambdaLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"759fa2c5-377e-4da8-8efd-d3f1fdbf90ae\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "timestamp": 4300
}
{
  "sandboxLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"06319871-85e8-4612-b807-b59efa4f36da\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "lambdaLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"06319871-85e8-4612-b807-b59efa4f36da\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "timestamp": 4400
}
{
  "sandboxLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"7c95c494-1673-47e6-a156-c5efd6c34ce4\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "lambdaLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"7c95c494-1673-47e6-a156-c5efd6c34ce4\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "timestamp": 4500
}
{
  "sandboxLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"5f46872f-7652-41e0-bd78-a845800a8725\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "lambdaLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"5f46872f-7652-41e0-bd78-a845800a8725\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "timestamp": 4600
}
{
  "sandboxLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"5f8de503-697a-4c3a-b099-e39d1a819d47\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "lambdaLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"5f8de503-697a-4c3a-b099-e39d1a819d47\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "timestamp": 4700
}
{
  "sandboxLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"11918ce5-4de5-4531-932a-0bf4dd03c987\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "lambdaLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"11918ce5-4de5-4531-932a-0bf4dd03c987\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "timestamp": 4800
}
{
  "sandboxLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"a8948d59-0c19-4e48-b4d5-bbca776a764e\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "lambdaLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"a8948d59-0c19-4e48-b4d5-bbca776a764e\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "timestamp": 4900
}
{
  "sandboxLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"09b575d8-157e-4ce6-8395-eaa2d37f76d3\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "lambdaLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"09b575d8-157e-4ce6-8395-eaa2d37f76d3\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "timestamp": 5000
}
{
  "sandboxLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"b820354a-39b4-4252-84cb-980a29029071\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "lambdaLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"b820354a-39b4-4252-84cb-980a29029071\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "timestamp": 5100
}
{
  "sandboxLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"70a67a16-e252-4a77-9c53-e413f2ca6a46\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "lambdaLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"70a67a16-e252-4a77-9c53-e413f2ca6a46\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "timestamp": 5200
}
{
  "sandboxLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"eec5837b-4b33-4384-a67e-d07ef9c62281\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "lambdaLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"eec5837b-4b33-4384-a67e-d07ef9c62281\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "timestamp": 5300
}
{
  "sandboxLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"2d723172-4e1d-44b8-bdf7-26586fdb17c9\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "lambdaLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"2d723172-4e1d-44b8-bdf7-26586fdb17c9\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "timestamp": 5400
}
{
  "sandboxLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"eca73709-a55d-4793-a189-68cab3898000\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "lambdaLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"eca73709-a55d-4793-a189-68cab3898000\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "timestamp": 5500
}
{
  "sandboxLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"b9e97f89-f33a-4a4e-9ec2-e2632f8bddb5\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "lambdaLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"b9e97f89-f33a-4a4e-9ec2-e2632f8bddb5\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "timestamp": 5600
}
{
  "sandboxLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"066226e9-927b-46da-8da2-af12c74fb921\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "lambdaLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"066226e9-927b-46da-8da2-af12c74fb921\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "timestamp": 5700
}
{
  "sandboxLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"f13c23e2-88a8-4d60-96ef-a673abd6e928\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "lambdaLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"f13c23e2-88a8-4d60-96ef-a673abd6e928\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "timestamp": 5800
}
{
  "sandboxLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"8c3c2eb4-1830-451b-88bc-de4f57bbb581\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "lambdaLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"8c3c2eb4-1830-451b-88bc-de4f57bbb581\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "timestamp": 5900
}
{
  "sandboxLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"269bfc24-5719-4ea8-8363-a34085e925f6\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "lambdaLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"269bfc24-5719-4ea8-8363-a34085e925f6\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "timestamp": 6000
}
{
  "sandboxLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"002ae234-5390-4154-ab55-f8ad8feeb97f\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "lambdaLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"002ae234-5390-4154-ab55-f8ad8feeb97f\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "timestamp": 6100
}
{
  "sandboxLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"a458dd6c-f766-4d81-87eb-e3f2e0e48481\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "lambdaLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"a458dd6c-f766-4d81-87eb-e3f2e0e48481\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "timestamp": 6200
}
{
  "sandboxLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"bdab65da-4ae7-4f22-8411-29655f7a442e\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "lambdaLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"bdab65da-4ae7-4f22-8411-29655f7a442e\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "timestamp": 6300
}
{
  "sandboxLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"17a13f74-da38-4e04-a7f0-27efbdf51aa6\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "lambdaLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"17a13f74-da38-4e04-a7f0-27efbdf51aa6\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "timestamp": 6400
}
{
  "sandboxLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"e71ac30d-7c23-4b64-8f0c-7a0924127d42\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "lambdaLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"e71ac30d-7c23-4b64-8f0c-7a0924127d42\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "timestamp": 6500
}
{
  "sandboxLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"e978f26b-92ea-45f7-9391-a946b888c860\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "lambdaLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"e978f26b-92ea-45f7-9391-a946b888c860\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "timestamp": 6600
}
{
  "sandboxLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"e3817f73-223f-449d-bea7-9a9583a593c8\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "lambdaLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"e3817f73-223f-449d-bea7-9a9583a593c8\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "timestamp": 6700
}
{
  "sandboxLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"828e0525-14cf-4111-b97b-fa88de80581b\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "lambdaLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"828e0525-14cf-4111-b97b-fa88de80581b\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "timestamp": 6800
}
{
  "sandboxLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"c0699369-3086-472f-9a32-47b4e63972ea\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "lambdaLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"c0699369-3086-472f-9a32-47b4e63972ea\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "timestamp": 6900
}
{
  "sandboxLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"e235348e-2765-4882-ba8b-950a09f413b6\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "lambdaLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"e235348e-2765-4882-ba8b-950a09f413b6\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "timestamp": 7000
}
{
  "sandboxLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"ca91d370-5f0d-40ac-9315-032cd47fcfa6\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "lambdaLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"ca91d370-5f0d-40ac-9315-032cd47fcfa6\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "timestamp": 7100
}
{
  "sandboxLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"cce32fd7-1a25-4774-8264-acfb10a1a05d\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "lambdaLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"cce32fd7-1a25-4774-8264-acfb10a1a05d\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "timestamp": 7200
}
{
  "sandboxLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"70b116b4-1280-4acb-a728-ae5f811385fb\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "lambdaLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"70b116b4-1280-4acb-a728-ae5f811385fb\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "timestamp": 7300
}
{
  "sandboxLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"fee8a224-dcca-412a-bd14-f5132410cdd8\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "lambdaLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"fee8a224-dcca-412a-bd14-f5132410cdd8\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "timestamp": 7400
}
{
  "sandboxLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"5f99b94c-fbc2-444a-bb59-f67a2cf92f2f\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "lambdaLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"5f99b94c-fbc2-444a-bb59-f67a2cf92f2f\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "timestamp": 7500
}
{
  "sandboxLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"7f8ea014-b072-4f8c-9539-ad6097f1a94e\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "lambdaLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"7f8ea014-b072-4f8c-9539-ad6097f1a94e\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "timestamp": 7600
}
{
  "sandboxLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"fe5ab252-4402-4c81-a10e-58e3791ea20c\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "lambdaLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"fe5ab252-4402-4c81-a10e-58e3791ea20c\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "timestamp": 7700
}
{
  "sandboxLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"5e4ce01b-8841-42ac-8edf-fd0181788800\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "lambdaLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"5e4ce01b-8841-42ac-8edf-fd0181788800\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "timestamp": 7800
}
{
  "sandboxLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"43bd53b4-1553-4fa3-a8e2-fb0ea27fbeda\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "lambdaLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"43bd53b4-1553-4fa3-a8e2-fb0ea27fbeda\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "timestamp": 7900
}
{
  "sandboxLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"dcdbfdef-159c-48e7-a3ea-645c417d001a\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "lambdaLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"dcdbfdef-159c-48e7-a3ea-645c417d001a\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "timestamp": 8000
}
{
  "sandboxLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"c8f8e105-29cb-4096-a7d0-dce9918a0d16\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "lambdaLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"c8f8e105-29cb-4096-a7d0-dce9918a0d16\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "timestamp": 8100
}
{
  "sandboxLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"e50df3da-c10b-4992-9006-1fabefe52445\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "lambdaLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"e50df3da-c10b-4992-9006-1fabefe52445\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "timestamp": 8200
}
{
  "sandboxLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"26905194-7d3a-4a3a-b23a-4819e3f7c7af\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "lambdaLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"26905194-7d3a-4a3a-b23a-4819e3f7c7af\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "timestamp": 8300
}
{
  "sandboxLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"907fd365-076d-4d18-8b05-eef5e75e3eac\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "lambdaLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"907fd365-076d-4d18-8b05-eef5e75e3eac\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "timestamp": 8400
}
{
  "sandboxLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"6b1e8c62-c4e8-41df-8374-009abad82278\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "lambdaLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"6b1e8c62-c4e8-41df-8374-009abad82278\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "timestamp": 8500
}
{
  "sandboxLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"e298dccc-7291-45ba-bb2b-796f9dd557be\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "lambdaLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"e298dccc-7291-45ba-bb2b-796f9dd557be\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "timestamp": 8600
}
{
  "sandboxLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"0421699c-6422-4a5b-a941-803ccc29e27a\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "lambdaLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"0421699c-6422-4a5b-a941-803ccc29e27a\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "timestamp": 8700
}
{
  "sandboxLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"771ea1dd-636e-41d0-b16e-8666abdc531e\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "lambdaLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"771ea1dd-636e-41d0-b16e-8666abdc531e\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "timestamp": 8800
}
{
  "sandboxLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"85e773b4-5461-4c4b-bd56-db9f59193549\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "lambdaLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"85e773b4-5461-4c4b-bd56-db9f59193549\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "timestamp": 8900
}
{
  "sandboxLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"78670786-41b2-4f5e-8d79-acf55d2e1634\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "lambdaLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"78670786-41b2-4f5e-8d79-acf55d2e1634\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "timestamp": 9000
}
{
  "sandboxLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"7c515176-9b7c-43d8-94d6-f847b68b381e\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "lambdaLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"7c515176-9b7c-43d8-94d6-f847b68b381e\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "timestamp": 9100
}
{
  "sandboxLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"fa7740a1-37a4-47b3-987b-e2908def3779\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "lambdaLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"fa7740a1-37a4-47b3-987b-e2908def3779\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "timestamp": 9200
}
{
  "sandboxLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"eeb69262-88d8-477b-852c-68d646bd9d3d\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "lambdaLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"eeb69262-88d8-477b-852c-68d646bd9d3d\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "timestamp": 9300
}
{
  "sandboxLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"b3dd45b6-a3e2-446b-92e6-51c5c90cce51\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "lambdaLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"b3dd45b6-a3e2-446b-92e6-51c5c90cce51\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "timestamp": 9400
}
{
  "sandboxLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"e17bcfb9-d817-4946-9797-2bf785369f6a\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "lambdaLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"e17bcfb9-d817-4946-9797-2bf785369f6a\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "timestamp": 9500
}
{
  "sandboxLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"8ce558f6-7640-4f9b-be99-887234c752c2\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "lambdaLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"8ce558f6-7640-4f9b-be99-887234c752c2\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "timestamp": 9600
}
{
  "sandboxLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"c6e6f029-5b9c-4638-81fe-e6ba4e861516\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "lambdaLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"c6e6f029-5b9c-4638-81fe-e6ba4e861516\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "timestamp": 9700
}
{
  "sandboxLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"1ae6f37c-911e-45d7-9af7-b16e205c05d8\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "lambdaLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"1ae6f37c-911e-45d7-9af7-b16e205c05d8\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "timestamp": 9800
}
{
  "sandboxLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"976671f7-45c8-41ad-99a3-826472fb0113\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "lambdaLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"976671f7-45c8-41ad-99a3-826472fb0113\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "timestamp": 9900
}
{
  "sandboxLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"cd825373-9a56-4304-a04b-5692f12d6d81\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "lambdaLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"cd825373-9a56-4304-a04b-5692f12d6d81\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "timestamp": 10000
}
{
  "sandboxLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"96d665aa-93a8-4d14-a0df-a73812e0ef8f\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "lambdaLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"96d665aa-93a8-4d14-a0df-a73812e0ef8f\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "timestamp": 10100
}
{
  "sandboxLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"d7d197e0-f20f-4ba1-9299-266d8f617e76\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "lambdaLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"d7d197e0-f20f-4ba1-9299-266d8f617e76\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "timestamp": 10200
}
{
  "sandboxLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"433e8baa-745c-46f6-a89f-f0fd5d33be89\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "lambdaLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"433e8baa-745c-46f6-a89f-f0fd5d33be89\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "timestamp": 10300
}
{
  "sandboxLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"08b87479-03cf-4909-9a2d-30e609e32785\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "lambdaLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"08b87479-03cf-4909-9a2d-30e609e32785\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "timestamp": 10400
}
{
  "sandboxLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"195a06b4-9b87-4f4e-8520-e1aef0ffa816\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "lambdaLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"195a06b4-9b87-4f4e-8520-e1aef0ffa816\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "timestamp": 10500
}
{
  "sandboxLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"9995904b-44ff-4b0f-b120-5cfb639c87dc\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "lambdaLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"9995904b-44ff-4b0f-b120-5cfb639c87dc\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "timestamp": 10600
}
{
  "sandboxLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"af676ccc-b429-4c87-8726-cf165ee779e3\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "lambdaLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"af676ccc-b429-4c87-8726-cf165ee779e3\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "timestamp": 10700
}
{
  "sandboxLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"552e5d12-a9dc-4cdd-9153-08c6f6bc4ff6\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "lambdaLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"552e5d12-a9dc-4cdd-9153-08c6f6bc4ff6\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "timestamp": 10800
}
{
  "sandboxLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"dc82f278-69f1-4f46-8874-ec9a02b01a42\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "lambdaLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"dc82f278-69f1-4f46-8874-ec9a02b01a42\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "timestamp": 10900
}
{
  "sandboxLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"3c97f672-3049-4037-802c-3eb1f25fceef\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "lambdaLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"3c97f672-3049-4037-802c-3eb1f25fceef\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "timestamp": 11000
}
{
  "sandboxLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"daa67262-2879-4acf-9ef7-898e7846df93\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "lambdaLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"daa67262-2879-4acf-9ef7-898e7846df93\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "timestamp": 11100
}
{
  "sandboxLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"db380745-b93e-47a8-8777-da92a46c8973\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "lambdaLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"db380745-b93e-47a8-8777-da92a46c8973\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "timestamp": 11200
}
{
  "sandboxLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"7bfa51a9-87b8-4f4d-b629-2326cae2e3a3\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "lambdaLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"7bfa51a9-87b8-4f4d-b629-2326cae2e3a3\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "timestamp": 11300
}
{
  "sandboxLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"42e218d4-9096-4815-b93f-0f59830e40c0\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "lambdaLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"42e218d4-9096-4815-b93f-0f59830e40c0\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "timestamp": 11400
}
{
  "sandboxLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"3da2b318-a566-425c-8280-ed0dd0dbb765\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "lambdaLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"3da2b318-a566-425c-8280-ed0dd0dbb765\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "timestamp": 11500
}
{
  "sandboxLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"e8d0f19a-87c9-4b02-b7ca-cbe2d4f1df63\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "lambdaLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"e8d0f19a-87c9-4b02-b7ca-cbe2d4f1df63\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "timestamp": 11600
}
{
  "sandboxLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"a2634a89-bc70-467b-95f7-066bc1b36da1\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "lambdaLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"a2634a89-bc70-467b-95f7-066bc1b36da1\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "timestamp": 11700
}
{
  "sandboxLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"1e2a9780-ebab-4e64-9674-2df3f51bce71\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "lambdaLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"1e2a9780-ebab-4e64-9674-2df3f51bce71\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "timestamp": 11800
}
{
  "sandboxLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"4b1c71f6-82ca-4e0f-bd94-937cc4690f7c\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "lambdaLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"4b1c71f6-82ca-4e0f-bd94-937cc4690f7c\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "timestamp": 11900
}
{
  "sandboxLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"a2077734-24ba-4306-984c-6c5c7814a10b\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "lambdaLog": "[ERROR] TypeError: unsupported operand type(s) for ^: 'float' and 'float'\\n{\"errorMessage\": \"unsupported operand type(s) for ^: 'float' and 'float'\", \"errorType\": \"TypeError\", \"requestId\": \"a2077734-24ba-4306-984c-6c5c7814a10b\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 716, in run\\n    ink_fair_value = self.ink_fair_value(\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in ink_fair_value\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\", \"  File \\\"/var/task/trader.py\\\", line 460, in <genexpr>\\n    exponential_weighted_avg = (1-beta) * mmmid_price + (1 - beta) * sum(beta^i * price_history[-i- 1] for i in range(len(price_history)))\\n\"]}",
  "timestamp": 12000
}
{
  "sandboxLog": "Lambda errors have reached maximum value for submission a6db5a38-466c-45ef-8a02-b46e79a6936d",
  "lambdaLog": null,
  "timestamp": 112972
}



Activities log:
day;timestamp;product;bid_price_1;bid_volume_1;bid_price_2;bid_volume_2;bid_price_3;bid_volume_3;ask_price_1;ask_volume_1;ask_price_2;ask_volume_2;ask_price_3;ask_volume_3;mid_price;profit_and_loss
0;0;RAINFOREST_RESIN;9998;9;9995;23;;;10005;23;;;;;10001.5;0.0
0;0;KELP;2028;23;;;;;2032;23;;;;;2030.0;0.0
0;0;SQUID_INK;1968;23;;;;;1971;23;;;;;1969.5;0.0
0;100;SQUID_INK;1970;1;1969;2;1967;22;1971;22;;;;;1970.5;0.0
0;100;KELP;2031;1;2030;2;2028;22;2032;22;;;;;2031.5;0.0
0;100;RAINFOREST_RESIN;10002;1;10000;2;9998;4;10004;1;10005;21;;;10003.0;0.0
0;200;SQUID_INK;1966;1;1965;21;;;1969;22;;;;;1967.5;2.9150390625
0;200;RAINFOREST_RESIN;9996;1;9995;21;;;10004;1;10005;21;;;10000.0;2.0
0;200;KELP;2029;1;2028;21;;;2032;22;;;;;2030.5;0.80419921875
0;300;SQUID_INK;1967;1;1965;26;;;1968;26;;;;;1967.5;4.634521484375
0;300;KELP;2031;1;2029;26;;;2032;26;;;;;2031.5;1.376220703125
0;300;RAINFOREST_RESIN;9995;26;;;;;10005;26;;;;;10000.0;5.0
0;400;RAINFOREST_RESIN;9998;8;9996;2;9995;26;10004;2;10005;26;;;10001.0;5.0
0;400;KELP;2029;2;2028;26;;;2032;28;;;;;2030.5;2.5263671875
0;400;SQUID_INK;1966;28;;;;;1969;28;;;;;1967.5;2.3427734375
0;500;SQUID_INK;1966;24;;;;;1968;3;1970;24;;;1967.0;0.755859375
0;500;KELP;2028;24;;;;;2030;3;2031;24;;;2029.0;3.74951171875
0;500;RAINFOREST_RESIN;9998;8;9996;1;9995;23;10004;1;10005;23;;;10001.0;5.0
0;600;SQUID_INK;1967;5;1965;30;;;1968;30;;;;;1967.5;4.7578125
0;600;RAINFOREST_RESIN;9996;2;9995;28;;;10004;2;10005;28;;;10000.0;5.0
0;600;KELP;2030;5;2028;30;;;2031;30;;;;;2030.5;3.0
0;700;SQUID_INK;1967;22;;;;;1970;23;;;;;1968.5;26.97265625
0;700;KELP;2028;22;;;;;2032;23;;;;;2030.0;17.021484375
0;700;RAINFOREST_RESIN;9996;1;9995;22;;;10004;1;10005;22;;;10000.0;5.0
0;800;RAINFOREST_RESIN;9996;1;9995;24;;;10000;3;10004;1;10005;24;9998.0;5.0
0;800;KELP;2028;25;;;;;2030;3;2032;25;;;2029.0;17.16015625
0;800;SQUID_INK;1967;25;;;;;1968;3;1970;25;;;1967.5;26.0234375
0;900;SQUID_INK;1966;21;;;;;1970;21;;;;;1968.0;23.775390625
0;900;KELP;2029;21;;;;;2032;21;;;;;2030.5;20.6953125
0;900;RAINFOREST_RESIN;9996;1;9995;20;;;9998;11;10004;1;10005;20;9997.0;8.0
0;1000;SQUID_INK;1967;31;;;;;1970;31;;;;;1968.5;31.4140625
0;1000;RAINFOREST_RESIN;9996;1;9995;30;;;10004;1;10005;30;;;10000.0;30.0
0;1000;KELP;2029;31;;;;;2032;31;;;;;2030.5;22.8515625
0;1100;SQUID_INK;1968;22;;;;;1971;22;;;;;1969.5;37.69140625
0;1100;KELP;2029;22;;;;;2032;22;;;;;2030.5;23.021484375
0;1100;RAINFOREST_RESIN;9996;1;9995;21;;;10002;6;10004;1;10005;21;9999.0;30.0
0;1200;RAINFOREST_RESIN;9996;1;9995;22;;;10004;1;10005;22;;;10000.0;30.0
0;1200;KELP;2029;22;;;;;2033;23;;;;;2031.0;27.3046875
0;1200;SQUID_INK;1968;22;;;;;1971;23;;;;;1969.5;41.5703125
0;1300;SQUID_INK;1968;25;;;;;1971;25;;;;;1969.5;38.927734375
0;1300;KELP;2029;25;;;;;2033;25;;;;;2031.0;28.85546875
0;1300;RAINFOREST_RESIN;10002;1;9995;25;;;10005;25;;;;;10003.5;30.0
0;1400;SQUID_INK;1968;23;;;;;1970;6;1972;23;;;1969.0;44.97265625
0;1400;RAINFOREST_RESIN;9995;23;;;;;10000;6;10005;23;;;9997.5;32.0
0;1400;KELP;2029;23;;;;;2030;6;2033;23;;;2029.5;27.955078125
0;1500;SQUID_INK;1971;1;1969;21;;;1972;21;;;;;1971.5;48.578125
0;1500;KELP;2032;1;2029;21;;;2033;21;;;;;2032.5;34.5703125
0;1500;RAINFOREST_RESIN;9996;1;9995;20;;;9998;4;10004;1;10005;20;9997.0;32.0
0;1600;RAINFOREST_RESIN;9996;2;9995;28;;;10004;2;10005;28;;;10000.0;40.0
0;1600;KELP;2029;30;;;;;2033;30;;;;;2031.0;36.74609375
0;1600;SQUID_INK;1970;30;;;;;1974;30;;;;;1972.0;63.0859375
0;1700;SQUID_INK;1970;28;;;;;1972;8;1973;28;;;1971.0;56.58203125
0;1700;KELP;2029;28;;;;;2031;8;2033;28;;;2030.0;37.333984375
0;1700;RAINFOREST_RESIN;9995;28;;;;;10005;28;;;;;10000.0;40.0
0;1800;SQUID_INK;1972;4;1971;23;;;1974;23;;;;;1973.0;66.984375
0;1800;RAINFOREST_RESIN;10000;4;9995;23;;;10002;10;10005;23;;;10001.0;40.0
0;1800;KELP;2031;4;2029;23;;;2033;23;;;;;2032.0;35.71484375
0;1900;SQUID_INK;1969;31;;;;;1972;32;;;;;1970.5;49.044921875
0;1900;KELP;2030;31;;;;;2033;32;;;;;2031.5;39.2265625
0;1900;RAINFOREST_RESIN;9996;2;9995;30;;;10004;2;10005;30;;;10000.0;40.0




Trade History:
null